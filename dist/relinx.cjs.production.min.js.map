{"version":3,"file":"relinx.cjs.production.min.js","sources":["../src/context.ts","../src/utils/infoLog.ts","../src/PathNode.ts","../src/utils/toString.ts","../src/utils/shallowEqual.ts","../src/Application.ts","../src/utils/ifType.ts","../src/utils/key.ts","../src/Store.ts","../src/globalHelper.ts","../src/hooks/useGlobal.ts","../src/middleware/logger/utils.ts","../src/middleware/logger/print.ts","../src/Patcher.ts","../src/observe.tsx","../src/Provider.tsx","../src/applyMiddleware.ts","../src/utils/compose.ts","../src/createStore.ts","../src/middleware/logger/index.ts","../src/middleware/thunk.ts","../src/hooks/useDispatch.ts","../src/hooks/useNamespace.ts","../src/hooks/useRelinx.ts"],"sourcesContent":["import { createContext } from 'react';\nimport { ContextDefaultValue } from './types';\n\nconst calculateChangeBits = () => 0b00;\nconst noop = () => {};\n\nexport const defaultValue = {\n  computation: null,\n  dispatch: noop,\n  attachStoreName: noop,\n  useProxy: true,\n  namespace: null,\n  patcher: null,\n  trackerNode: null,\n  useRelinkMode: true,\n  application: null,\n};\n\n// @ts-ignore\nexport default createContext<ContextDefaultValue<T, M>>(\n  defaultValue,\n  // @ts-ignore\n  calculateChangeBits\n);\n","/**\n * Intentional info-level logging for clear separation from ad-hoc console debug logging.\n */\nfunction infoLog(...args: Array<any>) {\n  console.log('**DEBUG**', ...args); // eslint-disable-line\n}\n\nexport default infoLog;\n","import infoLog from './utils/infoLog';\nimport Patcher from './Patcher';\n\nconst DEBUG = false;\n\ninterface Children {\n  [key: string]: PathNode;\n}\n\nclass PathNode {\n  private parent: PathNode | undefined;\n  public patchers: Array<Patcher>;\n  public children: Children;\n  private prop: string;\n\n  constructor(prop?: string, parent?: PathNode) {\n    this.prop = prop || 'root';\n\n    this.parent = parent;\n    this.children = {};\n    this.patchers = [];\n  }\n\n  addPathNode(path: Array<string>, patcher: Patcher) {\n    try {\n      const len = path.length;\n      path.reduce<PathNode>((node: PathNode, cur: string, index: number) => {\n        // path中前面的值都是为了让我们定位到最后的需要关心的位置\n        if (!node.children[cur]) node.children[cur] = new PathNode(cur, node);\n        // 只有到达`path`的最后一个`prop`时，才会进行patcher的添加\n        if (index === len - 1) {\n          const childNode = node.children[cur];\n          if (DEBUG) {\n            infoLog('[PathNode add patcher]', childNode, patcher);\n          }\n          if (childNode.patchers) {\n            childNode.patchers.push(patcher);\n            patcher.addRemover(() => {\n              const index = childNode.patchers.indexOf(patcher);\n\n              if (DEBUG) {\n                infoLog('[PathNode remove patcher]', patcher.id, childNode);\n              }\n              if (index !== -1) {\n                childNode.patchers.splice(index, 1);\n              }\n            });\n          }\n        }\n        return node.children[cur];\n      }, this);\n    } catch (err) {\n      // console.log('err ', err)\n    }\n  }\n\n  destroyPathNode() {\n    try {\n      this.patchers.forEach(patcher => patcher.destroyPatcher());\n\n      if (this.children) {\n        const childKeys = Object.keys(this.children);\n        childKeys.forEach(key => {\n          const pathNode = this.children[key];\n          pathNode.destroyPathNode();\n        });\n      }\n\n      if (this.parent) {\n        delete this.parent.children[this.prop];\n      }\n    } catch (err) {\n      infoLog('[PathNode destroy issue]', err);\n    }\n  }\n}\n\nexport default PathNode;\n","const toString = Function.call.bind(Object.prototype.toString);\n\nexport default toString;\n","// https://github.com/facebook/react/blob/144328fe81719e916b946e22660479e31561bb0b/packages/shared/shallowEqual.js#L36-L68\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n/* eslint-disable no-self-compare */\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * inlined Object.is polyfill to avoid requiring consumers ship their own\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */\nfunction is(x: any, y: any) {\n  // SameValue algorithm\n  if (x === y) {\n    // Steps 1-5, 7-10\n    // Steps 6.b-6.e: +0 != -0\n    // Added the nonzero y check to make Flow happy, but it is redundant\n    return x !== 0 || y !== 0 || 1 / x === 1 / y;\n  }\n  // Step 6.a: NaN == NaN\n  return x !== x && y !== y;\n}\n\n/**\n * Performs equality by iterating through keys on an object and returning false\n * when any key has values which are not strictly equal between the arguments.\n * Returns true when the values of all keys are strictly equal.\n */\nfunction shallowEqual(objA: any, objB: any) {\n  if (is(objA, objB)) {\n    return true;\n  }\n\n  if (\n    typeof objA !== 'object' ||\n    objA === null ||\n    typeof objB !== 'object' ||\n    objB === null\n  ) {\n    return false;\n  }\n\n  const keysA = Object.keys(objA);\n  const keysB = Object.keys(objB);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n\n  // Test for A's keys different from B.\n  for (let i = 0; i < keysA.length; i++) {\n    if (\n      !hasOwnProperty.call(objB, keysA[i]) ||\n      !is(objA[keysA[i]], objB[keysA[i]])\n    ) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport default shallowEqual;\n","import PathNode from './PathNode';\nimport infoLog from './utils/infoLog';\nimport { isTypeEqual, isPrimitive, isMutable } from './utils/ifType';\nimport shallowEqual from './utils/shallowEqual';\nimport {\n  IApplication,\n  GenericState,\n  PendingPatcher,\n  ChangedValueGroup,\n} from './types';\nimport Patcher from './Patcher';\nimport produce from 'state-tracker';\n\nclass Application<T, K extends keyof T> implements IApplication<T, K> {\n  public base: GenericState<T, K>;\n  public node: PathNode;\n  public pendingPatchers: Array<PendingPatcher>;\n  public namespace: string;\n  public strictMode: boolean;\n  public proxyState: any;\n\n  constructor({\n    base,\n    namespace,\n    strictMode,\n  }: {\n    base: GenericState<T, K>;\n    namespace: string;\n    strictMode: boolean;\n  }) {\n    this.base = base;\n    this.node = new PathNode();\n    this.pendingPatchers = [];\n    this.namespace = namespace;\n    this.strictMode = strictMode;\n    this.proxyState = produce(this.base);\n  }\n\n  update(values: Array<ChangedValueGroup<K>>) {\n    this.pendingPatchers = [];\n\n    // console.log('this node ', this.node)\n\n    try {\n      values.forEach(value => this.treeShake(value));\n      values.forEach(value => this.updateBase(value));\n    } catch (err) {\n      infoLog('[Application] update issue ', err);\n    }\n\n    // console.log('change value ', values, this.pendingPatchers.slice())\n\n    this.pendingPatchers.forEach(({ patcher }) => {\n      patcher.triggerAutoRun();\n    });\n  }\n\n  updateBase({\n    storeKey,\n    changedValue,\n  }: {\n    storeKey: K;\n    changedValue: object;\n  }) {\n    const origin = this.base[storeKey] || ({} as any);\n    this.proxyState.relink([storeKey], { ...origin, ...changedValue });\n  }\n\n  addPatchers(patchers: Array<Patcher>) {\n    // console.log('patchers ', patchers.slice())\n    if (patchers.length) {\n      patchers.forEach(patcher => {\n        this.pendingPatchers.push({ patcher });\n      });\n      patchers.forEach(patcher => {\n        patcher.markDirty();\n      });\n    }\n  }\n\n  /**\n   *\n   * Recently it only support `Array`, `Object`, `Number`, `String` and `Boolean` five\n   * types..\n   */\n  treeShake({ storeKey, changedValue }: { storeKey: K; changedValue: object }) {\n    const branch = this.node.children[storeKey as any];\n    const baseValue = this.base[storeKey];\n    const nextValue = { ...baseValue, ...changedValue };\n\n    // why it could be undefined. please refer to https://github.com/ryuever/relinx/issues/4\n    if (!branch) return;\n\n    const toDestroy: Array<Function> = [];\n    const compare = (\n      branch: PathNode,\n      baseValue: {\n        [key: string]: any;\n      },\n      nextValue: {\n        [key: string]: any;\n      }\n    ) => {\n      const keysToCompare = Object.keys(branch.children);\n\n      keysToCompare.forEach(key => {\n        const oldValue = baseValue[key];\n        const newValue = nextValue[key];\n\n        if (shallowEqual(oldValue, newValue)) return;\n\n        if (isTypeEqual(oldValue, newValue)) {\n          if (isPrimitive(newValue)) {\n            if (oldValue !== newValue) {\n              // console.log('add patcher ', oldValue, newValue, key)\n              this.addPatchers(branch.children[key].patchers);\n            }\n          }\n\n          if (isMutable(newValue)) {\n            const childBranch = branch.children[key];\n            compare(childBranch, oldValue, newValue);\n            return;\n          }\n\n          return;\n        }\n        this.addPatchers(branch.children[key].patchers);\n      });\n    };\n\n    compare(branch, baseValue, nextValue);\n    toDestroy.forEach(fn => fn());\n  }\n\n  addPatcher(patcher: Patcher) {\n    const paths = patcher.paths;\n\n    paths.forEach(fullPath => {\n      this.node.addPathNode(fullPath, patcher);\n    });\n  }\n\n  getStoreData(storeName: K): T[K] {\n    const storeValue = this.base[storeName];\n    return storeValue;\n  }\n}\n\nexport default Application;\n","import toString from './toString';\n\nexport const isPresent = (o: any) => typeof o !== 'undefined';\nexport const isObject = (obj: any) => toString(obj) === '[object Object]';\nexport const isArray = (obj: any) => toString(obj) === '[object Array]';\nexport const isNumber = (obj: any) => toString(obj) === '[object Number]';\nexport const isString = (obj: any) => toString(obj) === '[object String]';\nexport const isBoolean = (obj: any) => toString(obj) === '[object Boolean]';\n\nexport const isMutable = (obj: any) => isObject(obj) || isArray(obj);\nexport const isPrimitive = (obj: any) =>\n  isNumber(obj) || isString(obj) || isBoolean(obj);\nexport const isTypeEqual = (o1: any, o2: any) => toString(o1) === toString(o2);\n\nexport const isStrictEmptyObject = (obj: any) => {\n  if (!isObject(obj)) return false;\n\n  for (const prop in obj) { // eslint-disable-line\n    if (obj.hasOwnProperty(prop)) return false // eslint-disable-line\n  }\n  return true;\n};\n\nexport const isStrictEmptyArray = (arr: any) => isArray(arr) && !arr.length;\n\nexport const hasEmptyItem = (...args: Array<any>) =>\n  args.some(arg => isStrictEmptyArray(arg) || isStrictEmptyObject(arg));\n","// https://github.com/facebook/draft-js/blob/master/src/model/keys/generateRandomKey.js\n\ninterface SeenKeys {\n  [key: string]: boolean;\n}\n\ninterface PatcherIds {\n  [key: string]: number;\n}\n\ninterface PatcherSeenKeys {\n  [key: string]: {\n    [key: string]: number;\n  };\n}\n\nconst seenKeys: SeenKeys = {};\nconst MULTIPLIER = Math.pow(2, 24) // eslint-disable-line\n\nexport const generateNamespaceKey = () => {\n  let key;\n\n  while (key === undefined || seenKeys.hasOwnProperty(key) || !isNaN(+key)) { // eslint-disable-line\n    key = Math.floor(Math.random() * MULTIPLIER).toString(32);\n  }\n\n  seenKeys[key] = true;\n  return key;\n};\n\nconst patcherIds: PatcherIds = {};\nexport const generatePatcherId = ({\n  namespace,\n}: {\n  namespace: string;\n}): string => {\n  const count = patcherIds[namespace] || 0;\n  const next = count + 1;\n  patcherIds[namespace] = next;\n  return `${namespace}_patcherId_${count}`;\n};\n\nconst patcherSeenKeys: PatcherSeenKeys = {};\nexport const generatePatcherKey = ({\n  namespace,\n  componentName,\n}: {\n  namespace: string;\n  componentName: string;\n}) => {\n  if (!patcherSeenKeys[namespace]) patcherSeenKeys[namespace] = {};\n  const count = patcherSeenKeys[namespace][componentName] || 0;\n  const next = count + 1;\n  patcherSeenKeys[namespace][componentName] = next;\n  return `${namespace}_${componentName}_patcher_${count}`;\n};\n\nexport const generateRandomGlobalActionKey = () => Math.floor(Math.random() * MULTIPLIER).toString(32) // eslint-disable-line\n","import Application from './Application';\nimport {\n  Action,\n  InternalDispatch,\n  Subscription,\n  BasicModelType,\n  ChangedValueGroup,\n  CreateStoreOnlyModels,\n  ExtractStateTypeOnlyModels,\n  ExtractEffectsTypeOnlyModels,\n  ExtractReducersTypeOnlyModels,\n} from './types';\n\nclass Store<T extends BasicModelType<T>, MODEL_KEY extends keyof T = keyof T> {\n  private _application: Application<T, MODEL_KEY> | null;\n  private _count: number;\n  public dispatch: InternalDispatch;\n  private _state: ExtractStateTypeOnlyModels<T>;\n  private _reducers: ExtractReducersTypeOnlyModels<T>;\n  private _effects: ExtractEffectsTypeOnlyModels<T>;\n  private _pendingActions: Array<Action>;\n  public initialState: any;\n  public subscriptions: {\n    [key: string]: Subscription<ExtractStateTypeOnlyModels<T>>;\n  };\n\n  constructor(configs: {\n    models: CreateStoreOnlyModels<T>;\n    initialValue?: {\n      [key in MODEL_KEY]?: any;\n    };\n  }) {\n    const models = configs.models;\n    const initialValue = configs.initialValue || ({} as any);\n\n    this._state = {} as ExtractStateTypeOnlyModels<T>;\n    this._reducers = {} as ExtractReducersTypeOnlyModels<T>;\n    this._effects = {} as ExtractEffectsTypeOnlyModels<T>;\n    this._pendingActions = [];\n\n    const keys = Object.keys(models) as Array<MODEL_KEY>;\n\n    keys.forEach(key => {\n      this.injectModel(key, models[key], initialValue[key]);\n    });\n\n    this.dispatch = () => {};\n    this._application = null;\n    this.subscriptions = {};\n    this._count = 0;\n  }\n\n  getState(): ExtractStateTypeOnlyModels<T> {\n    return this._state;\n  }\n\n  getReducers(): ExtractReducersTypeOnlyModels<T> {\n    return this._reducers;\n  }\n\n  getEffects(): ExtractEffectsTypeOnlyModels<T> {\n    return this._effects;\n  }\n\n  setValue(actions: Array<Action>) {\n    const nextActions = ([] as Array<Action>).concat(actions);\n    const changedValues = nextActions.reduce<\n      Array<ChangedValueGroup<MODEL_KEY>>\n    >((changedValueGroup, action) => {\n      if (!this._application) return [];\n      const { type, payload } = action;\n      const [storeKey, actionType] = type.split('/') as [\n        MODEL_KEY,\n        keyof ExtractReducersTypeOnlyModels<T>\n      ];\n      const usedReducer = this._reducers[storeKey];\n\n      // If usedReducer is null, Maybe you have dispatched an unregistered action.\n      // On this condition, put these actions to `this._pendingActions`\n      if (!usedReducer) {\n        this._pendingActions.push(action);\n      } else if (usedReducer[actionType]) {\n        const currentState = this._application.base[storeKey];\n        const changedValue = usedReducer[actionType](currentState, payload);\n        changedValueGroup.push({\n          storeKey,\n          changedValue,\n        });\n      } else {\n        console.warn(`Do not have action '${actionType}'`);\n      }\n\n      return changedValueGroup;\n    }, []);\n\n    if (changedValues.length) {\n      const toObject = changedValues.reduce<\n        {\n          [key in MODEL_KEY]: object;\n        }\n      >(\n        (acc, cur) => {\n          const { storeKey, changedValue } = cur;\n          acc[storeKey] = changedValue;\n          return acc;\n        },\n        {} as {\n          [key in MODEL_KEY]: object;\n        }\n      );\n      const oldState = {\n        ...this._application?.base,\n      } as ExtractStateTypeOnlyModels<T>;\n      const newState = {\n        ...this._application?.base,\n        ...toObject,\n      } as ExtractStateTypeOnlyModels<T>;\n\n      this._application?.update(changedValues);\n\n      for (let key in this.subscriptions) {\n        const subscription = this.subscriptions[key];\n        subscription({\n          oldState,\n          newState,\n          diff: toObject as Partial<ExtractStateTypeOnlyModels<T>>,\n        });\n      }\n    }\n  }\n\n  bindApplication(application: Application<T, MODEL_KEY>) {\n    this._application = application;\n  }\n\n  decorateDispatch(chainedMiddleware: Function) {\n    this.dispatch = chainedMiddleware(this.setValue.bind(this));\n  }\n\n  generateSubscriptionKey(): string {\n    return `store_${this._count++}`;\n  }\n\n  subscribe(\n    subscription: Subscription<ExtractStateTypeOnlyModels<T>>\n  ): Function {\n    const key = this.generateSubscriptionKey();\n    this.subscriptions[key] = subscription;\n    return () => delete this.subscriptions[key];\n  }\n\n  injectModel(key: MODEL_KEY, model: any, initialValue: any = {}) {\n    const { state, reducers = {}, effects = {} } = model;\n    // consume all the pending actions.\n    let base = this._application?.getStoreData(key) || {\n      ...state,\n      ...initialValue,\n    };\n\n    const nextPendingActions = this._pendingActions.filter(action => {\n      const { type, payload } = action;\n      const [storeKey, actionType] = type.split('/') as [\n        MODEL_KEY,\n        keyof ExtractReducersTypeOnlyModels<T>\n      ];\n\n      // only process action with current injected model's tag\n      if (key === storeKey) {\n        const reducer = reducers[actionType];\n        const effect = effects[actionType];\n\n        let nextState = base;\n\n        if (typeof reducer === 'function') {\n          nextState = reducer(base, payload);\n          base = { ...base, ...nextState };\n          // what if pending action is an effect. call dispatch again to re-run...\n          // But, there is still a condition, effects followed by normal reducer...\n          // The result may override by effect...\n        } else if (typeof effect === 'function') {\n          this.dispatch(action);\n        } else {\n          console.warn(\n            `Maybe you have dispatched an unregistered model's effect action(${action})`\n          );\n        }\n      }\n\n      return storeKey !== key;\n    });\n\n    this._state[key] = base;\n    this._pendingActions = nextPendingActions;\n\n    this._application?.updateBase({\n      storeKey: key,\n      changedValue: base,\n    });\n\n    if (reducers) this._reducers[key] = reducers as any;\n    if (effects) this._effects[key] = effects as any;\n  }\n}\n\nexport default Store;\n","import { Collections, Action } from './types';\n\nclass GlobalHelper {\n  public collections: Collections;\n  constructor() {\n    this.collections = [];\n  }\n\n  addAction(actionKey: string, namespace: string, actions: Array<Action>) {\n    this.collections.push({\n      actionKey,\n      namespace,\n      remover: () => {\n        const index = this.collections.findIndex(\n          ({ actionKey: key }) => key === actionKey\n        );\n        if (index !== -1) this.collections.splice(index, 1);\n      },\n      actions,\n    });\n  }\n}\n\nexport default new GlobalHelper();\n","import invariant from 'invariant';\nimport globalHelper from '../globalHelper';\nimport { generateRandomGlobalActionKey } from '../utils/key';\nimport {\n  GlobalActions,\n  GlobalAction,\n  GlobalDispatch,\n  Collections,\n} from '../types';\n\nconst dispatch = (actions: GlobalActions | GlobalAction) => {\n  const next = ([] as GlobalActions).concat(actions);\n\n  next.forEach(action => {\n    const { namespace: targetNamespace, actions } = action;\n    invariant(targetNamespace, '`namespace` is required for global action');\n    invariant(actions, '`actions` is required for global action');\n    const actionKey = generateRandomGlobalActionKey();\n    globalHelper.addAction(actionKey, targetNamespace, actions);\n  });\n};\n\n// It is not a official documentation compatible Hooks API.\n// For global state, data change responsive is not required, which means\n// value's change will not trigger any UI/data update...\nexport default (): [Collections, GlobalDispatch] => [\n  globalHelper.collections,\n  dispatch,\n];\n","const padding = (value: number, paddingCount = 2) =>\n  `00${value}`.slice(-paddingCount);\n\nexport const formatTime = (d: number) => {\n  const date = new Date(d);\n  const hh = date.getHours();\n  const mm = date.getMinutes();\n  const ss = date.getSeconds();\n  const ms = date.getMilliseconds();\n\n  return `${padding(hh)}:${padding(mm)}:${padding(ss)}.${padding(ms, 3)}`;\n};\n","import { Action } from '../../types';\n\nimport { formatTime } from './utils';\n\nconst colorLine = Function.apply.bind(console.log, null) // eslint-disable-line\nconst colorGroupEnd = console.groupEnd // eslint-disable-line\nconst colorGroupCollapsed = Function.apply.bind(console.groupCollapsed, null) // eslint-disable-line\n// const isEmptyObject = obj => !obj || Object.keys(obj).length === 0 && obj.constructor === Object\n\nconst colorLog = (group: Array<Array<string>>) => {\n  const { text: t, styles: s } = group.reduce(\n    (acc, cur) => {\n      const { text, styles } = acc;\n      const [subText, subStyle] = cur;\n\n      return {\n        text: `${text}%c ${subText}`,\n        styles: ([] as Array<string>).concat(styles, subStyle),\n      };\n    },\n    {\n      text: '',\n      styles: [] as Array<string>,\n    }\n  );\n\n  return [t, ...s];\n};\n\nconst renderTitle = (props: {\n  initialActions: Array<Action>;\n  startTime: number;\n  endTime: number;\n}) => {\n  const { initialActions, startTime, endTime } = props;\n  let title: string = '';\n\n  const nextActions = ([] as Array<Action>).concat(initialActions).slice(0, 2);\n\n  nextActions.forEach(({ type }) => {\n    title = title ? `${title}__${type}` : type;\n  });\n\n  if (initialActions.length > 2) {\n    title = `${title}...`;\n  }\n\n  let actionColor = 'color: #7cb305; font-weight: bold';\n\n  if (title.startsWith('@init')) {\n    actionColor = 'color: #ff4d4f; font-weight: bold';\n  }\n\n  const parts = [];\n  parts.push(['action', actionColor]);\n  parts.push([title, 'color: inherit;']);\n  parts.push([\n    `@ ${formatTime(startTime)}`,\n    'color: gray; font-weight: lighter;',\n  ]);\n  parts.push([\n    `(${endTime - startTime}ms)`,\n    'color: gray; font-weight: lighter;',\n  ]);\n\n  colorGroupCollapsed(colorLog(parts));\n};\n\nconst renderSubAction = (props: {\n  type: string;\n  payload?: any;\n  actionType?: string;\n  style?: string;\n}) => {\n  const { type, payload = '', actionType = 'action', style } = props;\n  const parts = [];\n\n  if (type) {\n    parts.push([actionType, 'color: #eb2f96; font-weight: bold']);\n    parts.push([type, 'color: #722ed1; font-weight: bold']);\n  }\n\n  if (style === 'line') {\n    colorLine([...colorLog(parts), payload]);\n  } else {\n    colorGroupCollapsed([...colorLog(parts), payload]);\n  }\n};\n\nconst renderState = (state: object, isNextState: boolean = false) => {\n  const parts = [];\n\n  let title = 'currentState';\n  let style = 'color: #4CAF50; font-weight: bold';\n\n  if (isNextState) {\n    title = 'nextState';\n    style = 'color: #4CAF50; font-weight: bold';\n  }\n\n  parts.push([title, style]);\n  colorLine([...colorLog(parts), state]);\n};\n\nconst renderPrevState = (state: object) => {\n  renderState(state);\n};\n\nconst paint = (tree: {\n  type: string;\n  actions?: {\n    [key: string]: any;\n  };\n  effects?: {\n    [key: string]: any;\n  };\n  payload?: any;\n  actionType?: string;\n}) => {\n  const { type, actions = {}, effects = {}, payload, actionType } = tree;\n  const actionKeys = Object.keys(actions);\n  const effectKeys = Object.keys(effects);\n\n  if (!actionKeys.length && !effectKeys.length) {\n    renderSubAction({\n      type,\n      payload,\n      actionType,\n      style: 'line',\n    });\n  } else {\n    renderSubAction({\n      type,\n      payload,\n      actionType,\n    });\n  }\n\n  actionKeys.forEach(key => {\n    const action = actions[key];\n    paint(action);\n  });\n  effectKeys.forEach(key => {\n    const effect = effects[key];\n    paint(effect);\n  });\n\n  if (actionKeys.length || effectKeys.length) {\n    colorGroupEnd();\n  }\n};\n\nconst paintActions = (actions: Array<Action>) => {\n  const nextActions = actions.filter(({ type }) => !type.startsWith('@init'));\n\n  nextActions.forEach(action => paint(action));\n\n  if (nextActions.length) {\n    colorGroupEnd();\n  }\n};\n\nexport default (props: {\n  actions: Array<Action>;\n  prevState: object;\n  initialActions: Array<Action>;\n  startTime: number;\n  endTime: number;\n}) => {\n  const { prevState = {}, actions } = props;\n\n  renderTitle(props);\n  renderPrevState(prevState);\n  paintActions(actions);\n  colorGroupEnd();\n};\n","import { IPatcher } from './types';\n\nclass Patcher implements IPatcher {\n  public autoRunFn: Function;\n  public paths: Array<Array<string>>;\n  public removers: Array<Function>;\n  public dirty: boolean;\n  public id: string;\n  public displayName: string;\n  public parent: null | Patcher;\n  public children: Array<any>;\n\n  constructor({\n    paths,\n    autoRunFn,\n    key,\n    parent,\n    displayName,\n  }: {\n    paths: Array<Array<string>>;\n    autoRunFn: Function;\n    key: string;\n    parent: null | Patcher;\n    displayName: string;\n  }) {\n    this.autoRunFn = autoRunFn;\n    this.paths = paths;\n\n    this.removers = [];\n    this.dirty = false;\n    this.id = key;\n    this.displayName = displayName;\n    this.parent = parent;\n    this.children = [];\n\n    if (this.parent) {\n      this.parent.children.push(this);\n    }\n  }\n\n  destroyPatcher() {\n    this.teardown();\n    if (this.children.length) {\n      this.children.forEach(child => child.destroyPatcher());\n    }\n\n    if (this.parent) {\n      this.parent.removeChild(this);\n    }\n    this.parent = null;\n  }\n\n  appendTo(parent: null | Patcher) {\n    if (this.parent) {\n      this.parent.removeChild(this);\n    }\n\n    if (parent) {\n      this.parent = parent;\n\n      if (parent.children.indexOf(this) === -1) {\n        parent.children.push(this);\n      }\n    }\n  }\n\n  belongs(parent: null | Patcher): boolean {\n    if (!parent) return false;\n\n    if (this.parent) {\n      if (this.parent === parent) {\n        return true;\n      }\n      return this.parent.belongs(parent);\n    }\n\n    return false;\n  }\n\n  removeChild(child: Patcher) {\n    const index = this.children.indexOf(child);\n    if (index !== -1) this.children.splice(index, 1);\n  }\n\n  update({ paths }: { paths: Array<Array<string>> }) {\n    this.paths = paths;\n    this.dirty = false;\n    this.teardown();\n  }\n\n  addRemover(remover: Function) {\n    this.removers.push(remover);\n  }\n\n  // 将patcher从PathNode上删除\n  teardown() {\n    this.removers.forEach(remover => remover());\n    this.removers = [];\n  }\n\n  markDirty() {\n    this.teardown();\n  }\n\n  markDirtyAll() {\n    this.teardown();\n\n    // If parent is dirty, then its children should be all dirty...\n    if (this.children.length) {\n      this.children.forEach(child => child.markDirtyAll());\n    }\n  }\n\n  triggerAutoRun() {\n    if (typeof this.autoRunFn === 'function') this.autoRunFn();\n  }\n}\n\nexport default Patcher;\n","import React, {\n  useContext,\n  useState,\n  useRef,\n  useEffect,\n  useCallback,\n  FC,\n} from 'react';\nimport context from './context';\nimport { generatePatcherKey } from './utils/key';\nimport Patcher from './Patcher';\n\nlet count = 0;\n\nconst Helper = ({ addListener }: { addListener: Function }) => {\n  addListener();\n  return null;\n};\n\nexport default (WrappedComponent: FC<any>) => {\n  function NextComponent(props: any) {\n    const shadowState = useRef(0);\n    // @ts-ignore\n    const [_, setState] = useState(0); // eslint-disable-line\n    const patcherUpdated = useRef(0);\n    const isMounted = useRef(false);\n\n    useEffect(() => {\n      isMounted.current = true;\n    });\n\n    const {\n      application,\n      useProxy,\n      useScope,\n      namespace,\n      patcher: parentPatcher,\n      useRelinkMode,\n      ...rest\n    } = useContext(context);\n\n    const incrementCount = useRef(count++)  // eslint-disable-line\n    const componentName = `${NextComponent.displayName}-${incrementCount.current}`;\n    const patcher = useRef<undefined | Patcher>();\n\n    shadowState.current += 1;\n\n    const autoRunFn = () => {\n      if (isMounted.current) setState(state => state + 1);\n    };\n\n    if (!patcher.current) {\n      patcher.current = new Patcher({\n        paths: [],\n        autoRunFn,\n        parent: parentPatcher,\n        key: generatePatcherKey({\n          namespace: namespace as string,\n          componentName,\n        }),\n        displayName: NextComponent.displayName,\n      });\n    }\n\n    application?.proxyState.enter(componentName);\n\n    useEffect(\n      () => () => {\n        if (patcher.current) patcher.current.destroyPatcher();\n      },\n      [] // eslint-disable-line\n    );\n\n    const addListener = useCallback(() => {\n      patcher.current?.appendTo(parentPatcher); // maybe not needs\n      // const paths = []\n      // const start = Date.now();\n      // const paths2 = application?.proxyState\n      //   .getContext()\n      //   .getCurrent()\n      //   .getRemarkable();\n      // const end = Date.now();\n      // console.log('diff ', componentName, end - start, paths2);\n\n      // @ts-ignore\n      const paths = application?.proxyState\n        .getContext()\n        .getCurrent()\n        .getRemarkable();\n      // const end2 = Date.now();\n      // console.log('diff ', componentName, end2 - end, paths);\n\n      patcher.current?.update({ paths });\n      if (patcher.current) application?.addPatcher(patcher.current);\n      patcherUpdated.current += 1;\n      application?.proxyState.leave(componentName);\n    }, []); // eslint-disable-line\n\n    const contextValue = {\n      ...rest,\n      application,\n      useProxy,\n      useScope,\n      namespace,\n      useRelinkMode,\n      patcher: patcher.current,\n      componentName: componentName,\n    };\n\n    return (\n      <context.Provider value={contextValue}>\n        <React.Fragment>\n          <WrappedComponent {...props} />\n          <Helper addListener={addListener} />\n        </React.Fragment>\n      </context.Provider>\n    );\n  }\n\n  NextComponent.displayName =\n    WrappedComponent.displayName ||\n    WrappedComponent.name ||\n    'ObservedComponent';\n\n  return React.memo(props => <NextComponent {...props} />);\n};\n","import React, { useRef } from 'react';\nimport context, { defaultValue } from './context';\nimport Application from './Application';\nimport { generateNamespaceKey } from './utils/key';\nimport { ProviderProps, BasicModelType } from './types';\n\n// https://fettblog.eu/typescript-react/children/\n// https://stackoverflow.com/questions/53958028/how-to-use-generics-in-props-in-react-in-a-functional-component\nfunction Provider<T extends BasicModelType<T>, K extends keyof T = keyof T>({\n  store,\n  children,\n  namespace,\n  useProxy = true,\n  useRelinkMode = true,\n  strictMode = false,\n  useScope = true,\n}: ProviderProps<T>) {\n  const namespaceRef = useRef(namespace || generateNamespaceKey());\n  const application = useRef<Application<T, K>>();\n  if (!application.current) {\n    application.current = new Application<T, K>({\n      base: store.getState() as any,\n      namespace: namespaceRef.current,\n      strictMode,\n    });\n  }\n\n  store.bindApplication(application.current);\n  const dispatch = store.dispatch;\n\n  const contextValue = useRef({\n    ...defaultValue,\n    dispatch,\n    useProxy,\n    useScope,\n    useRelinkMode,\n    namespace: namespaceRef.current,\n    application: application.current,\n  });\n\n  return (\n    <context.Provider value={contextValue.current}>{children}</context.Provider>\n  );\n}\n\nexport default Provider;\n","import compose from './utils/compose';\nimport {\n  BasicModelType,\n  CreateStoreFn,\n  CreateStoreOnlyModels,\n  Middleware,\n  UnionActions,\n} from './types';\n\nexport default function applyMiddleware(...middleware: Array<Middleware>) {\n  const nextMiddleware = [...middleware];\n  return <T extends BasicModelType<T>>(\n    createStore: CreateStoreFn<T>\n  ) => (config: {\n    models: CreateStoreOnlyModels<T>;\n    initialValue?: {\n      [key in keyof T]?: any;\n    };\n  }) => {\n    const store = createStore(config);\n    const initialState = store.getState();\n\n    const api = {\n      dispatch: (actions: UnionActions, ...rest: Array<any>) =>\n        store.dispatch(actions, ...rest),\n      getState: () => initialState,\n      store,\n    };\n\n    const chain = nextMiddleware.map(middleware => middleware<T>(api));\n    store.decorateDispatch(compose(...chain));\n\n    return store;\n  };\n}\n","// https://github.com/reduxjs/redux/blob/master/src/compose.ts\n\nexport default function compose(...funcs: Array<Function>) {\n  if (funcs.length === 0) {\n    return (arg: any) => arg;\n  }\n\n  if (funcs.length === 1) {\n    return funcs[0];\n  }\n\n  return funcs.reduce((a, b) => (...args: Array<Function>) => a(b(...args)));\n}\n","import Store from './Store';\n\nimport {\n  CreateStoreOnlyModels,\n  EnhanceFunction,\n  BasicModelType,\n} from './types';\n\nexport default function createStore<\n  T extends BasicModelType<T>,\n  MODEL_KEY extends keyof T = keyof T\n>(\n  configs: {\n    models: CreateStoreOnlyModels<T>;\n    initialValue?: {\n      [key in MODEL_KEY]?: any;\n    };\n  },\n  enhancer?: EnhanceFunction\n): Store<T> {\n  if (typeof enhancer === 'function') {\n    return enhancer<T, MODEL_KEY>(createStore)(configs);\n  }\n\n  return new Store(configs);\n}\n","import print from './print';\nimport { Next, Action, ApplyMiddlewareAPI, BasicModelType } from '../../types';\n\nexport default <T extends BasicModelType<T>>({\n  getState,\n}: ApplyMiddlewareAPI<T>) => (next: Next) => (\n  actions: Array<Action> | Function\n) => {\n  if (typeof actions !== 'function') {\n    const startTime = Date.now();\n    const prevState = JSON.parse(JSON.stringify(getState()));\n\n    next(actions);\n\n    const endTime = Date.now();\n\n    print({\n      actions,\n      prevState,\n      initialActions: actions,\n      startTime,\n      endTime,\n    });\n  }\n};\n\n// 结束的时间点。。。\n// 如果同步的reducers的话，最外层运行结束就是一个结点\n// 如果说是一个effect的话，这个时候会有很多的不确定性。或者同样是以外层结束作为一个结点；\n// 然后每一次有sub结束完就搞一次；最终的结论就是一个action可能会有多个的log\n","import {\n  Next,\n  Action,\n  ThunkFn,\n  InternalDispatch,\n  ThunkDispatch,\n  BasicModelType,\n  ApplyMiddlewareAPI,\n  ExtractEffectsTypeOnlyModels,\n} from '../types';\n\n/**\n * The basic format of action type is `storeKey/${type}`.\n * Only action in effect could ignore `storeKey`\n */\nexport default <T extends BasicModelType<T>>({\n  getState,\n  dispatch,\n  store,\n}: ApplyMiddlewareAPI<T>) => (next: Next) => (\n  actions: Array<Action> | Function,\n  storeKey: keyof T\n) => {\n  if (typeof actions === 'function') {\n    const nextDispatch = (thunkActions: Array<Action> | Action) => {\n      const nextArgs = ([] as Array<Action>).concat(thunkActions) || [];\n      const actions = nextArgs\n        .map(action => {\n          if (!action) return null;\n          const { type, payload } = action;\n          const parts = [storeKey].concat(type.split('/') as any).slice(-2);\n          const nextAction: Action = {\n            type: parts.join('/'),\n          };\n          if (payload) {\n            nextAction.payload = payload;\n          }\n\n          return nextAction;\n        })\n        .filter(v => !!v) as Array<Action>;\n      if (actions.length) dispatch && (dispatch as InternalDispatch)(actions);\n    };\n    return actions(nextDispatch, getState);\n  }\n\n  const nextActions = ([] as Array<Action>).concat(actions);\n  const reducerActions: Array<Action> = [];\n  const effectActions: Array<Action> = [];\n\n  nextActions\n    .filter(action => {\n      if (Object.prototype.toString.call(action) === '[object Object]') {\n        const { type } = action;\n        return !!type;\n      }\n\n      return false;\n    })\n    .forEach(function(action: Action) {\n      try {\n        const { type } = action;\n        const parts = type.split('/');\n        const storeKey = parts[0] as keyof T;\n        const actionType = parts[1] as keyof ExtractEffectsTypeOnlyModels<\n          T\n        >[typeof storeKey];\n        const currentEffects = store.getEffects()[storeKey];\n\n        if (currentEffects && currentEffects[actionType]) {\n          return effectActions.push(action);\n        }\n\n        // If you dispatch an unregistered model's effect, it will be\n        // considered as an normal reducer action..\n        return reducerActions.push(action);\n      } catch (info) {\n        return false;\n      }\n    });\n\n  if (reducerActions.length) {\n    next(reducerActions);\n  }\n\n  effectActions.forEach(action => {\n    const { type, payload } = action;\n    const parts = type.split('/');\n    const storeKey = parts[0] as keyof T;\n    const actionType = parts[1] as keyof ExtractEffectsTypeOnlyModels<\n      T\n    >[keyof T];\n    const currentEffects = store.getEffects()[storeKey];\n    const handler = (currentEffects[actionType] as unknown) as ThunkFn<T>;\n\n    dispatch && (dispatch as ThunkDispatch<T>)(handler(payload), storeKey);\n  });\n};\n","import { useContext } from 'react';\nimport context from '../context';\nimport { ContextDefaultValue, RelinxDispatch } from '../types';\n\nexport default <T, M>(): [RelinxDispatch<T, M>] => {\n  const { dispatch } = useContext<ContextDefaultValue<T, M>>(context);\n  return [dispatch as RelinxDispatch<T, M>];\n};\n","import { useContext } from 'react';\nimport context from '../context';\n\nexport default (): string => {\n  const { namespace } = useContext(context);\n  return namespace!;\n};\n","import { useContext } from 'react';\nimport context from '../context';\nimport {\n  RelinxDispatch,\n  UseRelinxReturnValue,\n  ContextDefaultValue,\n} from '../types';\n\nexport default <T, M, K extends keyof T = any>(\n  storeName: K\n): UseRelinxReturnValue<T, M, K> => {\n  const { dispatch, application, componentName } = useContext<\n    ContextDefaultValue<T, M>\n  >(context);\n\n  const proxyState = application?.proxyState;\n  const state = proxyState.peek([storeName]);\n  const tracker = state.getTracker();\n  tracker.setContext(componentName);\n\n  return [state, dispatch as RelinxDispatch<T, M>];\n};\n"],"names":["noop","defaultValue","computation","dispatch","attachStoreName","useProxy","namespace","patcher","trackerNode","useRelinkMode","application","createContext","infoLog","args","console","log","PathNode","constructor","prop","parent","children","patchers","addPathNode","path","len","length","reduce","node","cur","index","childNode","push","addRemover","indexOf","splice","this","err","destroyPathNode","forEach","destroyPatcher","Object","keys","key","toString","Function","call","bind","prototype","hasOwnProperty","is","x","y","Application","base","strictMode","pendingPatchers","proxyState","produce","update","values","value","treeShake","updateBase","triggerAutoRun","storeKey","changedValue","relink","addPatchers","markDirty","branch","baseValue","nextValue","compare","oldValue","newValue","o2","obj","objA","objB","keysA","keysB","i","shallowEqual","isNumber","isString","isBoolean","isObject","isArray","isMutable","fn","addPatcher","paths","fullPath","getStoreData","storeName","seenKeys","MULTIPLIER","Math","pow","patcherSeenKeys","generatePatcherKey","componentName","count","Store","configs","models","initialValue","_state","_reducers","_effects","_pendingActions","injectModel","_application","subscriptions","_count","getState","getReducers","getEffects","setValue","actions","changedValues","concat","changedValueGroup","action","type","payload","actionType","split","usedReducer","warn","toObject","acc","oldState","_this$_application","newState","_this$_application2","subscription","diff","bindApplication","decorateDispatch","chainedMiddleware","generateSubscriptionKey","subscribe","model","state","reducers","effects","nextPendingActions","filter","reducer","effect","nextState","GlobalHelper","collections","addAction","actionKey","remover","findIndex","targetNamespace","invariant","floor","random","globalHelper","padding","paddingCount","slice","formatTime","d","date","Date","hh","getHours","mm","getMinutes","ss","getSeconds","ms","getMilliseconds","colorLine","apply","colorGroupEnd","groupEnd","colorGroupCollapsed","groupCollapsed","colorLog","group","text","t","styles","s","subText","subStyle","paint","tree","actionKeys","effectKeys","props","style","parts","renderSubAction","Patcher","autoRunFn","displayName","removers","dirty","id","teardown","child","removeChild","appendTo","belongs","markDirtyAll","Helper","addListener","store","useScope","namespaceRef","useRef","undefined","isNaN","generateNamespaceKey","current","contextValue","React","context","Provider","middleware","nextMiddleware","createStore","config","initialState","api","rest","chain","map","funcs","arg","a","b","compose","enhancer","next","startTime","now","prevState","JSON","parse","stringify","initialActions","endTime","title","actionColor","startsWith","renderTitle","isNextState","renderState","nextActions","paintActions","print","WrappedComponent","NextComponent","shadowState","_","setState","useState","patcherUpdated","isMounted","useEffect","parentPatcher","useContext","incrementCount","enter","useCallback","getContext","getCurrent","getRemarkable","leave","Fragment","name","memo","thunkActions","nextAction","join","v","reducerActions","effectActions","currentEffects","info","handler","peek","getTracker","setContext"],"mappings":"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"}