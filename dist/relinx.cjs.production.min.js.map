{"version":3,"file":"relinx.cjs.production.min.js","sources":["../src/context.ts","../src/utils/infoLog.ts","../src/PathNode.ts","../src/utils/toString.ts","../src/utils/ifType.ts","../src/Application.ts","../src/utils/is.ts","../src/utils/diffArraySimple.ts","../src/utils/key.ts","../src/Store.ts","../src/middleware/logger/utils.ts","../src/middleware/logger/print.ts","../src/tracker/commons.ts","../src/tracker/context.ts","../src/tracker/path.ts","../src/tracker/internalFunctions.ts","../src/tracker/ES5Tracker.ts","../src/tracker/es5.ts","../src/tracker/types/commons.ts","../src/tracker/proxyTracker.ts","../src/tracker/proxy.ts","../src/tracker/TrackerNode.ts","../src/Patcher.ts","../src/observe.tsx","../src/Provider.tsx","../src/applyMiddleware.ts","../src/utils/compose.ts","../src/createStore.ts","../src/middleware/logger/index.ts","../src/tracker/index.ts","../src/middleware/thunk.ts","../src/hooks/useDispatch.ts","../src/hooks/useRelinx.ts"],"sourcesContent":["import { createContext } from 'react';\nimport { ContextDefaultValue } from './types';\n\nconst calculateChangeBits = () => 0b00;\nconst noop = () => {};\n\nexport const defaultValue: ContextDefaultValue = {\n  computation: null,\n  dispatch: noop,\n  attachStoreName: noop,\n  useProxy: true,\n  namespace: null,\n  patcher: null,\n  trackerNode: null,\n  useRelinkMode: true,\n  application: null,\n};\n\n// @ts-ignore\nexport default createContext<defaultValue>(defaultValue, calculateChangeBits);\n","/**\n * Intentional info-level logging for clear separation from ad-hoc console debug logging.\n */\nfunction infoLog(...args: Array<any>) {\n  console.log('**DEBUG**', ...args); // eslint-disable-line\n}\n\nexport default infoLog;\n","import infoLog from './utils/infoLog';\nimport Patcher from './Patcher';\n\nconst DEBUG = false;\n\ninterface Children {\n  [key: string]: PathNode;\n}\n\nclass PathNode {\n  private parent: PathNode | undefined;\n  public patchers: Array<Patcher>;\n  public children: Children;\n  private prop: string;\n\n  constructor(prop?: string, parent?: PathNode) {\n    this.prop = prop || 'root';\n\n    this.parent = parent;\n    this.children = {};\n    this.patchers = [];\n  }\n\n  addPathNode(path: Array<string>, patcher: Patcher) {\n    const len = path.length;\n    path.reduce<PathNode>((node: PathNode, cur: string, index: number) => {\n      // path中前面的值都是为了让我们定位到最后的需要关心的位置\n      if (!node.children[cur]) node.children[cur] = new PathNode(cur, node);\n      // 只有到达`path`的最后一个`prop`时，才会进行patcher的添加\n      if (index === len - 1) {\n        const childNode = node.children[cur];\n        if (DEBUG) {\n          infoLog('[PathNode add patcher]', childNode, patcher);\n        }\n        childNode.patchers.push(patcher);\n        patcher.addRemover(() => {\n          const index = childNode.patchers.indexOf(patcher);\n\n          if (DEBUG) {\n            infoLog('[PathNode remove patcher]', patcher.id, childNode);\n          }\n          if (index !== -1) {\n            childNode.patchers.splice(index, 1);\n          }\n        });\n      }\n      return node.children[cur];\n    }, this);\n  }\n\n  destroyPathNode() {\n    try {\n      this.patchers.forEach(patcher => patcher.destroyPatcher());\n\n      if (this.children) {\n        const childKeys = Object.keys(this.children);\n        childKeys.forEach(key => {\n          const pathNode = this.children[key];\n          pathNode.destroyPathNode();\n        });\n      }\n\n      if (this.parent) {\n        delete this.parent.children[this.prop];\n      }\n    } catch (err) {\n      infoLog('[PathNode destroy issue]', err);\n    }\n  }\n}\n\nexport default PathNode;\n","const toString = Function.call.bind(Object.prototype.toString);\n\nexport default toString;\n","import toString from './toString';\n\nexport const isPresent = (o: any) => typeof o !== 'undefined';\nexport const isObject = (obj: any) => toString(obj) === '[object Object]';\nexport const isArray = (obj: any) => toString(obj) === '[object Array]';\n\nexport const isMutable = (obj: any) => isObject(obj) || isArray(obj);\nexport const isTypeEqual = (o1: any, o2: any) => toString(o1) === toString(o2);\n\nexport const isStrictEmptyObject = (obj: any) => {\n  if (!isObject(obj)) return false;\n\n  for (const prop in obj) { // eslint-disable-line\n    if (obj.hasOwnProperty(prop)) return false // eslint-disable-line\n  }\n  return true;\n};\n\nexport const isStrictEmptyArray = (arr: any) => isArray(arr) && !arr.length;\n\nexport const hasEmptyItem = (...args: Array<any>) =>\n  args.some(arg => isStrictEmptyArray(arg) || isStrictEmptyObject(arg));\n","import invariant from 'invariant';\nimport PathNode from './PathNode';\nimport is from './utils/is';\nimport infoLog from './utils/infoLog';\nimport { isObject, isMutable, isTypeEqual } from './utils/ifType';\nimport diffArraySimple from './utils/diffArraySimple';\nimport {\n  IApplication,\n  GenericState,\n  PendingPatcher,\n  ChangedValueGroup,\n  Operation,\n} from './types';\nimport Patcher from './Patcher';\n\nconst DEBUG = false;\nconst MINIMUS_RE_RENDER = false;\n\nclass Application<T, K extends keyof T> implements IApplication<T, K> {\n  public base: GenericState<T, K>;\n  public node: PathNode;\n  public pendingPatchers: Array<PendingPatcher>;\n  public namespace: string;\n  public strictMode: boolean;\n\n  constructor({\n    base,\n    namespace,\n    strictMode,\n  }: {\n    base: GenericState<T, K>;\n    namespace: string;\n    strictMode: boolean;\n  }) {\n    this.base = base;\n    this.node = new PathNode();\n    this.pendingPatchers = [];\n    this.namespace = namespace;\n    this.strictMode = strictMode;\n  }\n\n  update(values: Array<ChangedValueGroup<K>>) {\n    this.pendingPatchers = [];\n\n    if (DEBUG) {\n      infoLog('[Application] top most node ', this.node, this.base);\n      infoLog('[Application] changed value ', values);\n    }\n\n    try {\n      values.forEach(value => this.treeShake(value));\n      values.forEach(value => this.updateBase(value));\n    } catch (err) {\n      infoLog('[Application] update issue ', err);\n    }\n\n    const finalPatchers = [];\n    const len = this.pendingPatchers.length;\n\n    for (let i = 0; i < len; i++) {\n      const current = this.pendingPatchers[i].patcher;\n      const l = finalPatchers.length;\n      let found = false;\n      for (let y = 0; y < l; y++) {\n        // @ts-ignore\n        const base = finalPatchers[y];\n        if (current.belongs(base)) {\n          found = true;\n          break;\n        }\n        if (base.belongs(current)) {\n          finalPatchers.splice(y, 1);\n          finalPatchers.splice(y, 0, current);\n          found = true;\n          break;\n        }\n      }\n      if (!found) finalPatchers.push(current);\n    }\n\n    if (MINIMUS_RE_RENDER) {\n      finalPatchers.forEach(patcher => patcher.triggerAutoRun());\n    } else if (this.pendingPatchers.length) {\n      // const patcherId = generatePatcherId({ namespace: this.namespace });\n      this.pendingPatchers.forEach(({ patcher }) => {\n        patcher.triggerAutoRun();\n      });\n    }\n\n    if (DEBUG) {\n      if (MINIMUS_RE_RENDER) {\n        const final = finalPatchers.map(patcher => patcher.id);\n        infoLog('[Application] final patchers ', final, finalPatchers);\n      } else {\n        const pending = this.pendingPatchers.map(({ patcher }) => patcher.id);\n        infoLog(\n          '[Application] pending patchers ',\n          pending,\n          this.pendingPatchers\n        );\n      }\n    }\n  }\n\n  updateBase({\n    storeKey,\n    changedValue,\n  }: {\n    storeKey: K;\n    changedValue: object;\n  }) {\n    const origin = this.base[storeKey];\n    this.base[storeKey] = { ...origin, ...changedValue };\n  }\n\n  treeShake({ storeKey, changedValue }: { storeKey: K; changedValue: object }) {\n    const branch = this.node.children[storeKey as any];\n    const baseValue = this.base[storeKey];\n    const rootBaseValue = baseValue;\n    const nextValue = { ...baseValue, ...changedValue };\n\n    // why it could be undefined. please refer to https://github.com/ryuever/relinx/issues/4\n    if (!branch) return;\n\n    const toDestroy: Array<Function> = [];\n    const compare = (\n      branch: PathNode,\n      baseValue: {\n        [key: string]: any;\n      },\n      nextValue: {\n        [key: string]: any;\n      },\n      collections: Array<string>,\n      operation: Array<Operation>\n    ) => {\n      if (is(baseValue, nextValue)) return;\n\n      // TODO, add description...only primitive type react...\n      if (!isTypeEqual(baseValue, nextValue) || !isMutable(nextValue)) {\n        if (branch.patchers.length) {\n          branch.patchers.forEach(patcher => {\n            this.pendingPatchers.push({ collections, patcher, operation });\n          });\n          // delete should be placed after collection...\n          // `branch.patchers` will be modified on `markDirty`..\n          // branch.patchers.forEach(patcher => patcher.markDirtyAll())\n          branch.patchers.forEach(patcher => patcher.markDirty());\n        }\n      }\n\n      const caredKeys = Object.keys(branch.children);\n      let keysToCompare = caredKeys;\n      let keysToDestroy: Array<string> = [];\n      const currentOperation: Array<Operation> = [];\n\n      // 处理，如果说array中的一项被删除了。。。。\n      if (isTypeEqual(baseValue, nextValue) && Array.isArray(nextValue)) {\n        const baseLength = (baseValue as any).length;\n        const nextLength = nextValue.length;\n\n        if (nextLength < baseLength) {\n          keysToCompare = caredKeys.filter(\n            key => parseInt(key, 10) < nextLength || key === 'length'\n          );\n          keysToDestroy = caredKeys.filter(key => {\n            if (parseInt(key, 10) >= nextLength) {\n              currentOperation.push({\n                path: collections.concat(key),\n                isDelete: true,\n              });\n              return true;\n            }\n            return false;\n          });\n        }\n      }\n\n      if (isObject(nextValue) && isObject(baseValue)) {\n        const nextKeys = Object.keys(nextValue);\n        const prevKeys = Object.keys(baseValue);\n        const removed = diffArraySimple(prevKeys, nextKeys);\n\n        if (removed.length) {\n          toDestroy.push(\n            ((branch: PathNode, removed: Array<string>) => {\n              removed.forEach(key => {\n                const childBranch = branch.children[key];\n                if (childBranch) childBranch.destroyPathNode();\n              });\n            }).bind(null, branch, removed)\n          );\n        }\n      }\n\n      if (this.strictMode) {\n        keysToCompare.forEach(key => {\n          const childBranch = branch.children[key];\n          if (!baseValue || typeof baseValue[key] === 'undefined') {\n            childBranch.patchers.forEach(patcher => {\n              const displayName = patcher.displayName;\n              const joinedPath = collections.concat(key).join('.');\n              console.warn('root base value ', rootBaseValue) // eslint-disable-line\n              console.warn( // eslint-disable-line\n                `Maybe you are using an un-declared props %c${joinedPath}` +\n                  ` %cin Component %c${displayName} %cYou'd better declare this prop in model first,` +\n                  'or component may not re-render when value changes on ES5.',\n                'color: #ff4d4f; font-weight: bold',\n                '',\n                'color: #7cb305; font-weight: bold',\n                ''\n              );\n            });\n          }\n        });\n      }\n\n      keysToCompare.forEach(key => {\n        const childBranch = branch.children[key];\n        const childBaseValue = baseValue ? baseValue[key] : undefined;\n        // 当一个对象中的key被删除的时候，那么它的值就是undefined\n        const childNextValue = nextValue ? nextValue[key] : undefined;\n\n        compare(\n          childBranch,\n          childBaseValue,\n          childNextValue,\n          collections.concat(key),\n          currentOperation\n        );\n      });\n\n      if (keysToDestroy.length) {\n        toDestroy.push(\n          ((branch: PathNode, keysToDestroy: Array<string>) => {\n            keysToDestroy.forEach(key => {\n              const childBranch = branch.children[key];\n              if (childBranch) childBranch.destroyPathNode();\n            });\n          }).bind(null, branch, keysToDestroy)\n        );\n      }\n    };\n\n    compare(branch, baseValue, nextValue, [storeKey as any], []);\n    toDestroy.forEach(fn => fn());\n  }\n\n  addPatcher(patcher: Patcher) {\n    const paths = patcher.paths;\n\n    paths.forEach(fullPath => {\n      this.node.addPathNode(fullPath, patcher);\n    });\n  }\n\n  getStoreData(storeName: K): T[K] {\n    const storeValue = this.base[storeName];\n\n    // on iOS 10. toString(new Proxy({}, {}) === 'object ProxyObject')\n    invariant(\n      !!storeValue,\n      `Invalid storeName '${storeName}'.` +\n        'Please ensure `base[storeName]` return non-undefined value '\n    );\n\n    return storeValue;\n  }\n}\n\nexport default Application;\n","export default function is(x: any, y: any) {\n  // From: https://github.com/facebook/fbjs/blob/c69904a511b900266935168223063dd8772dfc40/packages/fbjs/src/core/shallowEqual.js\n  if (x === y) {\n    return x !== 0 || 1 / x === 1 / y;\n  }\n  return x !== x && y !== y // eslint-disable-line\n}\n","function diffArraySimple(\n  a: Array<string> = [] as any,\n  b: Array<string>\n): Array<string> {\n  const parts: Array<string> = [];\n\n  for (let i = 0; i < a.length; i++) {\n    const key = a[i];\n    if (b.indexOf(key) === -1) {\n      parts.push(key);\n    }\n  }\n\n  return parts;\n}\n\nexport default diffArraySimple;\n","// https://github.com/facebook/draft-js/blob/master/src/model/keys/generateRandomKey.js\n\ninterface SeenKeys {\n  [key: string]: boolean;\n}\n\ninterface PatcherIds {\n  [key: string]: number;\n}\n\ninterface PatcherSeenKeys {\n  [key: string]: {\n    [key: string]: number;\n  };\n}\n\nconst seenKeys: SeenKeys = {};\nconst MULTIPLIER = Math.pow(2, 24) // eslint-disable-line\n\nexport const generateNamespaceKey = () => {\n  let key;\n\n  while (key === undefined || seenKeys.hasOwnProperty(key) || !isNaN(+key)) { // eslint-disable-line\n    key = Math.floor(Math.random() * MULTIPLIER).toString(32);\n  }\n\n  seenKeys[key] = true;\n  return key;\n};\n\nconst patcherIds: PatcherIds = {};\nexport const generatePatcherId = ({\n  namespace,\n}: {\n  namespace: string;\n}): string => {\n  const count = patcherIds[namespace] || 0;\n  const next = count + 1;\n  patcherIds[namespace] = next;\n  return `${namespace}_patcherId_${count}`;\n};\n\nconst patcherSeenKeys: PatcherSeenKeys = {};\nexport const generatePatcherKey = ({\n  namespace,\n  componentName,\n}: {\n  namespace: string;\n  componentName: string;\n}) => {\n  if (!patcherSeenKeys[namespace]) patcherSeenKeys[namespace] = {};\n  const count = patcherSeenKeys[namespace][componentName] || 0;\n  const next = count + 1;\n  patcherSeenKeys[namespace][componentName] = next;\n  return `${namespace}_${componentName}_patcher_${count}`;\n};\n","import invariant from 'invariant';\nimport Application from './Application';\nimport {\n  Action,\n  Dispatch,\n  Subscription,\n  BasicModelType,\n  ChangedValueGroup,\n  CreateStoreOnlyModels,\n  ExtractStateTypeOnlyModels,\n  ExtractEffectsTypeOnlyModels,\n  ExtractReducersTypeOnlyModels,\n} from './types';\n\nclass Store<T extends BasicModelType<T>, MODEL_KEY extends keyof T = keyof T> {\n  private _application: Application<T, MODEL_KEY> | null;\n  private _count: number;\n  public dispatch: Dispatch;\n  private _state: ExtractStateTypeOnlyModels<T>;\n  private _reducers: ExtractReducersTypeOnlyModels<T>;\n  private _effects: ExtractEffectsTypeOnlyModels<T>;\n  public initialState: any;\n  public subscriptions: {\n    [key: string]: Function;\n  };\n\n  constructor(configs: {\n    models: CreateStoreOnlyModels<T>;\n    initialValue?: {\n      [key in MODEL_KEY]?: any;\n    };\n  }) {\n    const models = configs.models;\n    const initialValue = configs.initialValue || ({} as any);\n\n    this._state = {} as ExtractStateTypeOnlyModels<T>;\n    this._reducers = {} as ExtractReducersTypeOnlyModels<T>;\n    this._effects = {} as ExtractEffectsTypeOnlyModels<T>;\n\n    const keys = Object.keys(models) as Array<MODEL_KEY>;\n\n    keys.forEach(key => {\n      this.injectModel(key, models[key], initialValue[key]);\n    });\n\n    this.dispatch = () => {};\n    this._application = null;\n    this.subscriptions = {};\n    this._count = 0;\n  }\n\n  getState(): ExtractStateTypeOnlyModels<T> {\n    return this._state;\n  }\n\n  getReducers(): ExtractReducersTypeOnlyModels<T> {\n    return this._reducers;\n  }\n\n  getEffects(): ExtractEffectsTypeOnlyModels<T> {\n    return this._effects;\n  }\n\n  setValue(actions: Array<Action>) {\n    const nextActions = ([] as Array<Action>).concat(actions);\n    const changedValues = nextActions.reduce<\n      Array<ChangedValueGroup<MODEL_KEY>>\n    >((changedValueGroup, action) => {\n      if (!this._application) return [];\n      const { type, payload } = action;\n      const [storeKey, actionType] = type.split('/') as [\n        MODEL_KEY,\n        keyof ExtractReducersTypeOnlyModels<T>\n      ];\n      const usedReducer = this._reducers[storeKey];\n\n      invariant(usedReducer, `Reducer missing for type \\`${type}\\``);\n      const currentState = this._application.base[storeKey];\n      if (usedReducer[actionType]) {\n        const changedValue = usedReducer[actionType](currentState, payload);\n        changedValueGroup.push({\n          storeKey,\n          changedValue,\n        });\n      } else {\n        console.warn(`Do not have action '${actionType}'`);\n      }\n      return changedValueGroup;\n    }, []);\n\n    if (changedValues.length) {\n      this._application?.update(changedValues);\n    }\n  }\n\n  bindApplication(application: Application<T, MODEL_KEY>) {\n    this._application = application;\n  }\n\n  decorateDispatch(chainedMiddleware: Function) {\n    this.dispatch = chainedMiddleware(this.setValue.bind(this));\n  }\n\n  generateSubscriptionKey(): string {\n    return `store_${this._count++}`;\n  }\n\n  subscribe(subscription: Subscription) {\n    const key = this.generateSubscriptionKey();\n    this.subscriptions[key] = subscription;\n    return () => delete this.subscriptions[key];\n  }\n\n  injectModel(key: MODEL_KEY, model: any, initialValue: any = {}) {\n    const { state, reducers, effects } = model;\n    this._state[key] = { ...state, ...initialValue };\n    if (reducers) this._reducers[key] = reducers as any;\n    if (effects) this._effects[key] = effects as any;\n  }\n}\n\nexport default Store;\n","const padding = (value: number, paddingCount = 2) =>\n  `00${value}`.slice(-paddingCount);\n\nexport const formatTime = (d: number) => {\n  const date = new Date(d);\n  const hh = date.getHours();\n  const mm = date.getMinutes();\n  const ss = date.getSeconds();\n  const ms = date.getMilliseconds();\n\n  return `${padding(hh)}:${padding(mm)}:${padding(ss)}.${padding(ms, 3)}`;\n};\n","import { Action } from '../../types';\n\nimport { formatTime } from './utils';\n\nconst colorLine = Function.apply.bind(console.log, null) // eslint-disable-line\nconst colorGroupEnd = console.groupEnd // eslint-disable-line\nconst colorGroupCollapsed = Function.apply.bind(console.groupCollapsed, null) // eslint-disable-line\n// const isEmptyObject = obj => !obj || Object.keys(obj).length === 0 && obj.constructor === Object\n\nconst colorLog = (group: Array<Array<string>>) => {\n  const { text: t, styles: s } = group.reduce(\n    (acc, cur) => {\n      const { text, styles } = acc;\n      const [subText, subStyle] = cur;\n\n      return {\n        text: `${text}%c ${subText}`,\n        styles: ([] as Array<string>).concat(styles, subStyle),\n      };\n    },\n    {\n      text: '',\n      styles: [] as Array<string>,\n    }\n  );\n\n  return [t, ...s];\n};\n\nconst renderTitle = (props: {\n  initialActions: Array<Action>;\n  startTime: number;\n  endTime: number;\n}) => {\n  const { initialActions, startTime, endTime } = props;\n  let title: string = '';\n\n  const nextActions = ([] as Array<Action>).concat(initialActions).slice(0, 2);\n\n  nextActions.forEach(({ type }) => {\n    title = title ? `${title}__${type}` : type;\n  });\n\n  if (initialActions.length > 2) {\n    title = `${title}...`;\n  }\n\n  let actionColor = 'color: #7cb305; font-weight: bold';\n\n  if (title.startsWith('@init')) {\n    actionColor = 'color: #ff4d4f; font-weight: bold';\n  }\n\n  const parts = [];\n  parts.push(['action', actionColor]);\n  parts.push([title, 'color: inherit;']);\n  parts.push([\n    `@ ${formatTime(startTime)}`,\n    'color: gray; font-weight: lighter;',\n  ]);\n  parts.push([\n    `(${endTime - startTime}ms)`,\n    'color: gray; font-weight: lighter;',\n  ]);\n\n  colorGroupCollapsed(colorLog(parts));\n};\n\nconst renderSubAction = (props: {\n  type: string;\n  payload?: any;\n  actionType?: string;\n  style?: string;\n}) => {\n  const { type, payload = '', actionType = 'action', style } = props;\n  const parts = [];\n\n  if (type) {\n    parts.push([actionType, 'color: #eb2f96; font-weight: bold']);\n    parts.push([type, 'color: #722ed1; font-weight: bold']);\n  }\n\n  if (style === 'line') {\n    colorLine([...colorLog(parts), payload]);\n  } else {\n    colorGroupCollapsed([...colorLog(parts), payload]);\n  }\n};\n\nconst renderState = (state: object, isNextState: boolean = false) => {\n  const parts = [];\n\n  let title = 'currentState';\n  let style = 'color: #4CAF50; font-weight: bold';\n\n  if (isNextState) {\n    title = 'nextState';\n    style = 'color: #4CAF50; font-weight: bold';\n  }\n\n  parts.push([title, style]);\n  colorLine([...colorLog(parts), state]);\n};\n\nconst renderPrevState = (state: object) => {\n  renderState(state);\n};\n\nconst paint = (tree: {\n  type: string;\n  actions?: {\n    [key: string]: any;\n  };\n  effects?: {\n    [key: string]: any;\n  };\n  payload?: any;\n  actionType?: string;\n}) => {\n  const { type, actions = {}, effects = {}, payload, actionType } = tree;\n  const actionKeys = Object.keys(actions);\n  const effectKeys = Object.keys(effects);\n\n  if (!actionKeys.length && !effectKeys.length) {\n    renderSubAction({\n      type,\n      payload,\n      actionType,\n      style: 'line',\n    });\n  } else {\n    renderSubAction({\n      type,\n      payload,\n      actionType,\n    });\n  }\n\n  actionKeys.forEach(key => {\n    const action = actions[key];\n    paint(action);\n  });\n  effectKeys.forEach(key => {\n    const effect = effects[key];\n    paint(effect);\n  });\n\n  if (actionKeys.length || effectKeys.length) {\n    colorGroupEnd();\n  }\n};\n\nconst paintActions = (actions: Array<Action>) => {\n  const nextActions = actions.filter(({ type }) => !type.startsWith('@init'));\n\n  nextActions.forEach(action => paint(action));\n\n  if (nextActions.length) {\n    colorGroupEnd();\n  }\n};\n\nexport default (props: {\n  actions: Array<Action>;\n  prevState: object;\n  initialActions: Array<Action>;\n  startTime: number;\n  endTime: number;\n}) => {\n  const { prevState = {}, actions } = props;\n\n  renderTitle(props);\n  renderPrevState(prevState);\n  paintActions(actions);\n  colorGroupEnd();\n};\n","const toString = Function.call.bind<Function>(Object.prototype.toString);\nconst ownKeys = (o: any) =>\n  typeof Reflect !== 'undefined' && Reflect.ownKeys\n    ? Reflect.ownKeys(o)\n    : typeof Object.getOwnPropertySymbols !== 'undefined'\n    ? Object.getOwnPropertyNames(o).concat(\n        Object.getOwnPropertySymbols(o) as any\n      )\n    : Object.getOwnPropertyNames(o);\n\nexport const emptyFunction = () => {};\nexport const isObject = (o: any) => o ? (typeof o === 'object' || typeof o === 'function') : false // eslint-disable-line\nexport const hasSymbol = typeof Symbol !== 'undefined';\nexport const TRACKER: unique symbol = hasSymbol\n  ? Symbol('tracker')\n  : ('__tracker__' as any);\n\nexport const canIUseProxy = () => {\n  try {\n    new Proxy({}, {}) // eslint-disable-line\n  } catch (err) {\n    return false;\n  }\n\n  return true;\n};\n\nexport const hasOwnProperty = (o: object, prop: PropertyKey) => o.hasOwnProperty(prop) // eslint-disable-line\n\nexport const isTrackable = (o: any) => { // eslint-disable-line\n  return ['[object Object]', '[object Array]'].indexOf(toString(o)) !== -1;\n};\n\ntype EachArray<T> = (index: number, entry: any, obj: T) => void;\ntype EachObject<T> = <K extends keyof T>(key: K, entry: T[K], obj: T) => number;\n\n// type EachObject = Array<any> | { [key: string]: any }\ntype Iter<T extends Array<any> | { [key: string]: any }> = T extends Array<any>\n  ? EachArray<T>\n  : T extends { [key: string]: any }\n  ? EachObject<T>\n  : never;\n\nexport function each<T>(obj: T, iter: Iter<T>) {\n  if (Array.isArray(obj)) {\n    (obj as Array<any>).forEach((entry, index) =>\n      (iter as EachArray<T>)(index, entry, obj)\n    );\n  } else if (isObject(obj)) {\n    // @ts-ignore\n    ownKeys(obj).forEach(key => (iter as EachObject<T>)(key, obj[key], obj));\n  }\n}\n\nexport const Type = {\n  Object: 'object',\n  Array: 'array',\n};\n\nexport function shallowCopy(o: any) {\n  if (Array.isArray(o)) return o.slice();\n  const value = Object.create(Object.getPrototypeOf(o));\n  ownKeys(o).forEach(key => {\n    value[key] = o[key];\n  });\n\n  return value;\n}\n\nexport const inherit = (\n  subClass: {\n    prototype: any;\n    // __proto__: any;\n  },\n  superClass: {\n    prototype: any;\n  }\n) => {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  // subClass.__proto__ = superClass // eslint-disable-line\n};\n\nexport const createHiddenProperty = (\n  target: object,\n  prop: PropertyKey,\n  value: any\n) => {\n  Object.defineProperty(target, prop, {\n    value,\n    enumerable: false,\n    writable: true,\n  });\n};\n\nexport const hideProperty = (target: object, prop: PropertyKey) => {\n  Object.defineProperty(target, prop, {\n    enumerable: false,\n    configurable: false,\n  });\n};\n","import { TrackerNode } from './types';\n\nconst context: {\n  trackerNode: null | TrackerNode;\n} = {\n  trackerNode: null,\n};\n\nexport default context;\n","const joinPath = (path: Array<string>) => path.join('_');\n\ninterface AccessMap {\n  [key: string]: number;\n}\n\nexport const generateRemarkablePaths = (paths: Array<Array<string>>) => {\n  const copy = paths.slice();\n  const accessMap: AccessMap = {};\n  const len = copy.length;\n  const remarkablePaths = [];\n\n  for (let i = len - 1; i >= 0; i--) {\n    const path = copy[i].slice();\n    const pathLength = path.length;\n\n    let isConsecutive = false;\n\n    for (let i = 0; i < pathLength; i++) {\n      const joinedPath = joinPath(path);\n      const count = accessMap[joinedPath] || 0;\n\n      // the intermediate accessed path will be ignored.\n      // https://stackoverflow.com/questions/2937120/how-to-get-javascript-object-references-or-reference-count\n      // because of this, intermediate value may be ignored...\n      if (isConsecutive) {\n        accessMap[joinedPath] = count + 1;\n        path.pop();\n        continue // eslint-disable-line\n      }\n\n      if (!count) {\n        const p = path.slice();\n        const str = joinPath(p);\n        const found = remarkablePaths.find(path => joinPath(path) === str);\n        if (!found) remarkablePaths.push(p);\n        isConsecutive = true;\n        path.pop();\n      } else {\n        accessMap[joinedPath] = count - 1;\n        break;\n      }\n    }\n  }\n\n  return remarkablePaths;\n};\n","import invariant from 'invariant';\nimport { isTrackable, hideProperty } from './commons';\nimport { generateRemarkablePaths } from './path';\nimport context from './context';\nimport { IProxyTracker, IES5Tracker, PropProperty } from './types';\n\nconst peek = (proxy: IProxyTracker | IES5Tracker, accessPath: Array<string>) => { // eslint-disable-line\n  return accessPath.reduce((proxy, cur: string) => {\n    proxy.setProp('isPeeking', true);\n    const nextProxy = proxy[cur];\n    proxy.setProp('isPeeking', false);\n    return nextProxy;\n  }, proxy);\n};\n\nfunction internalFunctions() {}\nconst proto = internalFunctions.prototype;\n\nproto.assertLink = function(fnName: string) {\n  const proxy = this;\n  const trackerNode = proxy.getProp('trackerNode');\n\n  invariant(\n    trackerNode,\n    `You should not use \\`${fnName}\\` method with pure \\`proxy\\` object.\\n` +\n      'which should be bind with an `trackerNode` object'\n  );\n\n  invariant(\n    context.trackerNode !== trackerNode,\n    `\\`${fnName}\\` method is used to update \\`proxy\\` object from upstream.\\n` +\n      'So it is not meaning to link proxy in current trackerNode scope'\n  );\n};\n\nproto.reportAccessPath = function(path: string) {\n  const proxy = this // eslint-disable-line\n  const paths = proxy.getProp('paths');\n  const parentProxy = proxy.getProp('parentProxy');\n  paths.push(path);\n  if (!parentProxy) return;\n  parentProxy.runFn('reportAccessPath', path);\n};\n\nproto.cleanup = function() {\n  const proxy = this // eslint-disable-line\n  proxy.setProp('paths', []);\n  proxy.setProp('propProperties', []);\n};\n\nproto.unlink = function() {\n  const proxy = this // eslint-disable-line\n  return proxy.getProp('base');\n};\n\nproto.relink = function(path: Array<string>, baseValue: object) {\n  try {\n    this.runFn('assertLink', 'relink');\n    const proxy = this // eslint-disable-line\n    let copy = path.slice();\n    let last = copy.pop();\n    const len = path.length;\n    let nextBaseValue: {\n      [key: string]: any;\n    } = baseValue;\n\n    // fix: {a: { b: 1 }} => {a: {}}, nextBaseValue[key] is undefined\n    for (let i = 0; i < len; i++) {\n      const key = path[i];\n      if (typeof nextBaseValue[key] !== 'undefined') {\n        nextBaseValue = nextBaseValue[key];\n      } else {\n        copy = path.slice(0, i - 1);\n        last = path[i - 1];\n        break;\n      }\n    }\n    const nextProxy = peek(proxy, copy);\n    nextProxy.relinkProp(last, nextBaseValue);\n  } catch (err) {\n    // infoLog('[proxy relink issue]', path, baseValue, err)\n  }\n};\n\nproto.relinkProp = function(prop: string, newValue: object) {\n  this.runFn('assertLink', 'relinkProp');\n  const proxy = this // eslint-disable-line\n  const base = proxy.getProp('base');\n  const childProxies = proxy.getProp('childProxies');\n  const accessPath = proxy.getProp('accessPath');\n\n  if (Array.isArray(base)) {\n    proxy.setProp(\n      'base',\n      base.filter(v => v)\n    );\n  }\n  proxy.getProp('base')[prop] = newValue;\n\n  if (isTrackable(newValue)) {\n    childProxies[prop] = proxy.createChild(newValue, {\n      accessPath: accessPath.concat(prop),\n      parentProxy: proxy,\n    });\n  }\n};\n\nproto.relinkBase = function(baseValue: object) {\n  this.runFn('assertLink', 'rebase');\n  this.runFn('rebase', baseValue);\n};\n\nproto.rebase = function(baseValue: object) {\n  try {\n    const proxy = this // eslint-disable-line\n    proxy.setProp('base', baseValue);\n  } catch (err) {\n    // infoLog('[proxy] rebase ', err)\n  }\n};\n\nproto.setRemarkable = function(): boolean {\n  const proxy = this // eslint-disable-line\n  const accessPath = proxy.getProp('accessPath');\n  const parentProxy = proxy.getProp('parentProxy');\n  if (!parentProxy) return false;\n  parentProxy.runFn('reportAccessPath', accessPath);\n  return true;\n};\n\nproto.getRemarkableFullPaths = function() {\n  const proxy = this // eslint-disable-line\n  const paths = proxy.getProp('paths');\n  const propProperties = proxy.getProp('propProperties');\n  const rootPath = proxy.getProp('rootPath');\n  const internalPaths = generateRemarkablePaths(paths).map(path =>\n    rootPath.concat(path)\n  );\n  const external = propProperties.map((prop: PropProperty) => {\n    const { path, source } = prop;\n    const sourceRootPath = source?.getProp('rootPath');\n    return sourceRootPath.concat(path);\n  });\n  const externalPaths = generateRemarkablePaths(external);\n  return internalPaths.concat(externalPaths);\n};\n\nproto.assertScope = function() {\n  const useScope = this.getProp('useScope');\n\n  if (!useScope) return;\n  const trackerNode = this.getProp('trackerNode');\n\n  // If `contextTrackerNode` is null, it means access top most data prop.\n  if (!trackerNode) {\n    console.warn(\n      'trackerNode is undefined, which means you are using createTracker function directly.' +\n        'Maybe you should create TrackerNode object.'\n    );\n  } else if (!trackerNode.contains(context.trackerNode) && context.trackerNode)\n    throw new Error(\n      trackerNode.id +\n        'is not child node of ' +\n        context.trackerNode.id +\n        'Property only could be accessed by self node or parent node.'\n    );\n};\n\nhideProperty(proto, 'assertLink');\nhideProperty(proto, 'reportAccessPath');\nhideProperty(proto, 'cleanup');\nhideProperty(proto, 'unlink');\nhideProperty(proto, 'relink');\nhideProperty(proto, 'relinkBase');\nhideProperty(proto, 'relinkProp');\nhideProperty(proto, 'setRemarkable');\nhideProperty(proto, 'getRemarkableFullPaths');\nhideProperty(proto, 'rebase');\nhideProperty(proto, 'assertScope');\n\nexport default internalFunctions;\n","import internalFunctions from './internalFunctions';\nimport { inherit, Type, createHiddenProperty } from './commons';\nimport {\n  ES5TrackerConstructorProps,\n  ES5TrackerConstructor,\n  IES5Tracker,\n} from './types';\n\nlet count = 0;\n\nconst ES5Tracker = (function(\n  this: ES5TrackerConstructor,\n  {\n    accessPath,\n    parentProxy,\n    rootPath,\n    base,\n    trackerNode,\n    useRevoke,\n    useScope,\n  }: ES5TrackerConstructorProps\n) {\n  createHiddenProperty(this, 'id', `ES5Tracker_${count++}`) // eslint-disable-line\n\n  createHiddenProperty(this, 'trackerNode', trackerNode);\n  createHiddenProperty(this, 'accessPath', accessPath);\n  createHiddenProperty(this, 'rootPath', rootPath);\n  createHiddenProperty(\n    this,\n    'type',\n    Array.isArray(base) ? Type.Array : Type.Object\n  );\n  createHiddenProperty(this, 'base', base);\n\n  createHiddenProperty(this, 'parentProxy', parentProxy);\n  createHiddenProperty(this, 'childProxies', {});\n\n  createHiddenProperty(this, 'isPeeking', false);\n  createHiddenProperty(this, 'propProperties', []);\n  createHiddenProperty(this, 'paths', []);\n\n  createHiddenProperty(this, 'useRevoke', useRevoke);\n  createHiddenProperty(this, 'useScope', useScope);\n\n  createHiddenProperty(this, 'isRevoked', false);\n  createHiddenProperty(this, 'assertRevoke', function(this: IES5Tracker) {\n    const useRevoke = this.getProp('useRevoke');\n    if (!useRevoke) return;\n    const isRevoked = this.getProp('isRevoked');\n    if (isRevoked) {\n      throw new Error(\n        'Cannot use a proxy that has been revoked. Did you pass an object ' +\n          'to an async process? '\n      );\n    }\n  });\n} as any) as ES5TrackerConstructor;\n\ninherit(ES5Tracker, internalFunctions);\n\nexport default ES5Tracker;\n","import {\n  isObject,\n  TRACKER,\n  each,\n  shallowCopy,\n  isTrackable,\n  createHiddenProperty,\n} from './commons';\nimport ES5Tracker from './ES5Tracker';\nimport context from './context';\nimport {\n  IES5Tracker,\n  ES5TrackerInterface,\n  ES5TrackerConfig,\n  TrackerNode,\n  PropProperty,\n} from './types';\n\nconst peek = (proxy: IES5Tracker, accessPath: Array<string>) => { // eslint-disable-line\n  return accessPath.reduce((proxy, cur) => {\n    proxy.setProp('isPeeking', true);\n    const nextProxy = proxy[cur];\n    proxy.setProp('isPeeking', false);\n    return nextProxy;\n  }, proxy);\n};\n\nfunction createES5Tracker(\n  target: any,\n  config: ES5TrackerConfig,\n  trackerNode: TrackerNode\n): IES5Tracker {\n  const { accessPath = [], parentProxy, useRevoke, useScope, rootPath = [] } =\n    config || {};\n\n  if (!isObject(target)) {\n    throw new TypeError(\n      'Cannot create proxy with a non-object as target or handler'\n    );\n  }\n\n  const proxy: IES5Tracker = shallowCopy(target);\n\n  function proxyProperty(\n    proxy: IES5Tracker,\n    prop: PropertyKey,\n    enumerable: boolean\n  ) {\n    const desc = {\n      enumerable,\n      configurable: false,\n      get(this: IES5Tracker) {\n        this.runFn('assertRevoke');\n        this.runFn('assertScope');\n        const base = this.getProp('base');\n        const accessPath = this.getProp('accessPath');\n        const childProxies = this.getProp('childProxies');\n        const isPeeking = this.getProp('isPeeking');\n        const value = base[prop];\n        // For es5, the prop in array index getter is integer; when use proxy,\n        // `prop` will be string.\n        const nextAccessPath = accessPath.concat(`${prop as string}`);\n\n        if (!isPeeking) {\n          // for relink return parent prop...\n          if (\n            context.trackerNode &&\n            trackerNode.id !== context.trackerNode.id\n          ) {\n            const contextProxy = context.trackerNode.proxy;\n            const propProperties: Array<PropProperty> = contextProxy?.getProp(\n              'propProperties'\n            );\n            propProperties.push({\n              path: nextAccessPath,\n              source: trackerNode.proxy,\n            });\n            this.setProp('propProperties', propProperties);\n            if (trackerNode.proxy)\n              return peek(trackerNode.proxy as IES5Tracker, nextAccessPath);\n          }\n          this.runFn('reportAccessPath', nextAccessPath);\n        }\n\n        if (!isTrackable(value)) return value;\n        const childProxy = childProxies[prop];\n        // for rebase value, if base value change, the childProxy should\n        // be replaced\n        if (childProxy && childProxy.base === value) {\n          return childProxy;\n        }\n        return (childProxies[prop] = createES5Tracker(\n          value,\n          {\n            accessPath: nextAccessPath,\n            parentProxy: proxy,\n            rootPath,\n            useRevoke,\n            useScope,\n          },\n          trackerNode\n        ));\n      },\n    };\n\n    Object.defineProperty(proxy, prop, desc);\n  }\n\n  each(target as Array<any>, (prop: PropertyKey) => {\n    const desc = Object.getOwnPropertyDescriptor(target, prop);\n    const enumerable = desc?.enumerable || false;\n    proxyProperty(proxy, prop, enumerable);\n  });\n\n  if (Array.isArray(target)) {\n    const descriptors = Object.getPrototypeOf([]);\n    const keys = Object.getOwnPropertyNames(descriptors);\n\n    const handler = (\n      func: Function,\n      functionContext: IES5Tracker,\n      lengthGetter = true\n    ) =>\n      function(this: IES5Tracker) {\n      const args = Array.prototype.slice.call(arguments) // eslint-disable-line\n        this.runFn('assertRevoke');\n        if (lengthGetter) {\n          const accessPath = this.getProp('accessPath');\n          const isPeeking = this.getProp('isPeeking');\n          const nextAccessPath = accessPath.concat('length');\n\n          if (!isPeeking) {\n            if (\n              context.trackerNode &&\n              trackerNode.id !== context.trackerNode.id\n            ) {\n              const contextProxy = context.trackerNode.proxy;\n              const propProperties = contextProxy?.getProp('propProperties');\n              propProperties.push({\n                path: nextAccessPath,\n                source: trackerNode.proxy,\n              });\n\n              this.setProp('propProperties', propProperties);\n            }\n            this.runFn('reportAccessPath', nextAccessPath);\n          }\n        }\n\n        return func.apply(functionContext, args);\n      };\n\n    keys.forEach(key => {\n      const func = descriptors[key];\n      if (typeof func === 'function') {\n        const notRemarkLengthPropKeys = ['concat', 'copyWith'];\n        const remarkLengthPropKeys = [\n          'concat',\n          'copyWith',\n          'fill',\n          'find',\n          'findIndex',\n          'lastIndexOf',\n          'pop',\n          'push',\n          'reverse',\n          'shift',\n          'unshift',\n          'slice',\n          'sort',\n          'splice',\n          'includes',\n          'indexOf',\n          'join',\n          'keys',\n          'entries',\n          'forEach',\n          'filter',\n          'flat',\n          'flatMap',\n          'map',\n          'every',\n          'some',\n          'reduce',\n          'reduceRight',\n        ];\n        if (notRemarkLengthPropKeys.indexOf(key) !== -1) {\n          createHiddenProperty(proxy, key, handler(func, proxy, false));\n        } else if (remarkLengthPropKeys.indexOf(key) !== -1) {\n          createHiddenProperty(proxy, key, handler(func, proxy));\n        }\n      }\n    });\n  }\n\n  const tracker = new ES5Tracker({\n    base: target,\n    parentProxy,\n    accessPath,\n    rootPath,\n    trackerNode,\n    useRevoke,\n    useScope,\n  });\n\n  createHiddenProperty(proxy, 'getProps', function(this: IES5Tracker) {\n    const args: Array<keyof ES5TrackerInterface> = Array.prototype.slice.call(\n      arguments\n    );\n    return args.map(prop => this[TRACKER][prop]);\n  });\n  createHiddenProperty(proxy, 'getProp', function(this: IES5Tracker) {\n    const args: Array<keyof ES5TrackerInterface> = Array.prototype.slice.call(\n      arguments\n    );\n    return this[TRACKER][args[0]];\n  });\n  createHiddenProperty(proxy, 'setProp', function(this: IES5Tracker) {\n    const args = Array.prototype.slice.call(arguments);\n    const prop = args[0];\n    const value = args[1];\n    // @ts-ignore\n    return (this[TRACKER][prop] = value);\n  });\n  createHiddenProperty(proxy, 'runFn', function(this: IES5Tracker) {\n    const args = Array.prototype.slice.call(arguments);\n    const fn = this[TRACKER][args[0] as keyof ES5TrackerInterface];\n    const rest = args.slice(1);\n    if (typeof fn === 'function') return (fn as Function).apply(this, rest);\n  });\n  createHiddenProperty(proxy, 'unlink', function(this: IES5Tracker) {\n    return this.runFn('unlink');\n  });\n  createHiddenProperty(proxy, 'createChild', function(this: IES5Tracker) {\n    const args = Array.prototype.slice.call(arguments);\n    const target = args[0] || {};\n    const config = args[1] || {};\n    return createES5Tracker(\n      target,\n      {\n        useRevoke,\n        useScope,\n        rootPath,\n        ...config,\n      },\n      trackerNode\n    );\n  });\n  createHiddenProperty(proxy, 'revoke', function(this: IES5Tracker) {\n    const useRevoke = this.getProp('useRevoke');\n    if (useRevoke) this.setProp('isRevoked', true);\n  });\n\n  createHiddenProperty(proxy, TRACKER, tracker);\n\n  return proxy as IES5Tracker;\n}\n\nexport default createES5Tracker;\n","export enum Type {\n  Object = 'object',\n  Array = 'array',\n}\n","import internalFunctions from './internalFunctions';\nimport { inherit, createHiddenProperty } from './commons';\nimport {\n  ProxyTrackerConstructor,\n  ProxyTrackerConstructorProps,\n  Type,\n} from './types';\n\nlet count = 0;\n\n// 'this' implicitly has type 'any'\n// https://stackoverflow.com/questions/52431074/how-to-solve-this-implicitly-has-type-any-when-typescript-checking-classic\nconst ProxyTracker = (function(\n  this: ProxyTrackerConstructor,\n  {\n    accessPath,\n    parentProxy,\n    rootPath,\n    base,\n    trackerNode,\n    useRevoke,\n    useScope,\n  }: ProxyTrackerConstructorProps\n) {\n  createHiddenProperty(this, 'id', `ProxyTracker_${count++}`) // eslint-disable-line\n\n  createHiddenProperty(this, 'trackerNode', trackerNode);\n  createHiddenProperty(this, 'accessPath', accessPath);\n  createHiddenProperty(this, 'rootPath', rootPath);\n  createHiddenProperty(\n    this,\n    'type',\n    Array.isArray(base) ? Type.Array : Type.Object\n  );\n  createHiddenProperty(this, 'base', base);\n\n  createHiddenProperty(this, 'parentProxy', parentProxy);\n  createHiddenProperty(this, 'childProxies', {} as any);\n\n  createHiddenProperty(this, 'isPeeking', false);\n  createHiddenProperty(this, 'propProperties', [] as any);\n  createHiddenProperty(this, 'paths', [] as any);\n\n  createHiddenProperty(this, 'useRevoke', useRevoke);\n  createHiddenProperty(this, 'useScope', useScope);\n  // function constructor https://stackoverflow.com/a/43624326/2006805\n} as any) as ProxyTrackerConstructor;\n\ninherit(ProxyTracker, internalFunctions);\n\nexport default ProxyTracker;\n","import {\n  isObject,\n  TRACKER,\n  shallowCopy,\n  isTrackable,\n  hasOwnProperty,\n  createHiddenProperty,\n} from './commons';\nimport ProxyTracker from './proxyTracker';\nimport context from './context';\nimport {\n  IProxyTracker,\n  ProxyTrackerInterface,\n  TrackerNode,\n  ProxyTrackerConfig,\n  ProxyTrackerFunctions,\n  PropProperty,\n} from './types';\n\nconst peek = (proxy: IProxyTracker, accessPath: Array<string>) => { // eslint-disable-line\n  return accessPath.reduce((proxy, cur) => {\n    proxy.setProp('isPeeking', true);\n    const nextProxy = proxy[cur] as any;\n    proxy.setProp('isPeeking', false);\n    return nextProxy;\n  }, proxy);\n};\n\nfunction createTracker(\n  target: any,\n  config: ProxyTrackerConfig,\n  trackerNode: TrackerNode\n): IProxyTracker {\n  const { accessPath = [], parentProxy, useRevoke, useScope, rootPath = [] } =\n    config || {};\n\n  if (!isObject(target)) {\n    throw new TypeError(\n      'Cannot create proxy with a non-object as target or handler'\n    );\n  }\n\n  const copy = shallowCopy(target);\n\n  const internalProps = [\n    TRACKER,\n    'revoke',\n    'runFn',\n    'unlink',\n    'getProp',\n    'setProp',\n    'getProps',\n    'createChild',\n  ];\n\n  // can not use this in handler, should be `target`\n  const handler = {\n    get: (target: IProxyTracker, prop: PropertyKey, receiver: any) => {\n      target.runFn('assertScope');\n      if (prop === TRACKER) return Reflect.get(target, prop, receiver);\n      // assertScope(trackerNode, context.trackerNode)\n      const base = target.getProp('base');\n\n      // refer to immer...\n      // if (Array.isArray(tracker)) target = tracker[0]\n      const isInternalPropAccessed = internalProps.indexOf(prop as any) !== -1;\n      if (isInternalPropAccessed || !hasOwnProperty(base, prop)) {\n        return Reflect.get(target, prop, receiver);\n      }\n      const accessPath = target.getProp('accessPath');\n      const nextAccessPath = accessPath.concat(prop);\n      const isPeeking = target.getProp('isPeeking');\n\n      if (!isPeeking) {\n        // for relink return parent prop...\n        if (context.trackerNode && trackerNode.id !== context.trackerNode.id) {\n          const contextProxy = context.trackerNode.proxy;\n          const propProperties: Array<PropProperty> = contextProxy?.getProp(\n            'propProperties'\n          );\n          propProperties.push({\n            path: nextAccessPath,\n            source: trackerNode.proxy,\n          });\n          target.setProp('propProperties', propProperties);\n          if (trackerNode.proxy)\n            return peek(trackerNode.proxy as IProxyTracker, nextAccessPath);\n        }\n        target.runFn('reportAccessPath', nextAccessPath);\n      }\n      const childProxies = target.getProp('childProxies');\n      const value = base[prop];\n\n      if (!isTrackable(value)) return value;\n      const childProxy = childProxies[prop];\n\n      // for rebase value, if base value change, the childProxy should\n      // be replaced\n      if (childProxy && childProxy.base === value) {\n        return childProxy;\n      }\n      return (childProxies[prop] = createTracker(\n        value,\n        {\n          accessPath: nextAccessPath,\n          parentProxy: target,\n          rootPath,\n          useRevoke,\n          useScope,\n        },\n        trackerNode\n      ));\n    },\n  };\n\n  const tracker = new ProxyTracker({\n    base: target,\n    parentProxy,\n    accessPath,\n    rootPath,\n    trackerNode,\n    useRevoke,\n    useScope,\n  });\n\n  const { proxy, revoke } = Proxy.revocable<IProxyTracker>(copy, handler);\n\n  createHiddenProperty(proxy, 'getProps', function(this: IProxyTracker) {\n    const args: Array<keyof ProxyTrackerInterface> = Array.prototype.slice.call(\n      arguments\n    );\n    return args.map(prop => this[TRACKER][prop]);\n  });\n  createHiddenProperty(proxy, 'getProp', function(this: IProxyTracker) {\n    const args: Array<keyof ProxyTrackerInterface> = Array.prototype.slice.call(\n      arguments\n    );\n    return this[TRACKER][args[0]];\n  });\n  createHiddenProperty(proxy, 'setProp', function(this: IProxyTracker) {\n    const args = Array.prototype.slice.call(arguments) // eslint-disable-line\n    const prop = args[0];\n    const value = args[1];\n    // this[TRACKER][prop as keyof ProxyTrackerInterface] = value\n    // @ts-ignore\n    return (this[TRACKER][prop] = value);\n  });\n  createHiddenProperty(proxy, 'runFn', function(this: IProxyTracker): any {\n    const args = Array.prototype.slice.call(arguments) // eslint-disable-line\n    const fn = this[TRACKER][args[0] as keyof ProxyTrackerFunctions];\n    const rest = args.slice(1);\n    if (typeof fn === 'function') return (fn as Function).apply(this, rest);\n  });\n  createHiddenProperty(proxy, 'unlink', function(this: IProxyTracker) {\n    return this.runFn('unlink');\n  });\n  createHiddenProperty(proxy, 'createChild', function(this: IProxyTracker) {\n    const args = Array.prototype.slice.call(arguments) // eslint-disable-line\n    const target = args[0] || {};\n    const config = args[1] || {};\n    return createTracker(\n      target,\n      {\n        useRevoke,\n        useScope,\n        rootPath,\n        ...config,\n      },\n      trackerNode\n    );\n  });\n  createHiddenProperty(proxy, 'revoke', function(this: IProxyTracker) {\n    const useRevoke = this.getProp('useRevoke');\n    if (useRevoke) revoke();\n  });\n\n  createHiddenProperty(proxy, TRACKER, tracker);\n\n  return proxy as IProxyTracker;\n}\n\nexport default createTracker;\n","import context from './context';\nimport createES5Tracker from './es5';\nimport createTracker from './proxy';\n\nimport {\n  TrackerNodeConstructorProps,\n  HydrateConfig,\n  IProxyTracker,\n  IES5Tracker,\n} from './types';\n\nlet count = 0;\n\nclass TrackerNode {\n  public base: object;\n  public useRevoke: boolean;\n  public useScope: boolean;\n  public useProxy: boolean;\n  public rootPath: Array<string>;\n  public children: Array<any>;\n  public parent: null | TrackerNode;\n  public prevSibling: null | TrackerNode;\n  public nextSibling: null | TrackerNode;\n  public proxy: null | IProxyTracker | IES5Tracker;\n  public id: string;\n  public isRevoked: boolean;\n  public inScope: boolean;\n\n  constructor({\n    parent,\n    isSibling,\n    base,\n    useRevoke,\n    useScope,\n    useProxy,\n    rootPath,\n  }: TrackerNodeConstructorProps) {\n    this.base = base;\n    this.useRevoke = useRevoke;\n    this.useScope = useScope;\n    this.useProxy = useProxy;\n\n    this.rootPath = rootPath || [];\n\n    this.children = [];\n    this.parent = parent;\n    this.prevSibling = null;\n    this.nextSibling = null;\n    this.proxy = null;\n    this.id = `__TrackerNode_${count++}__` // eslint-disable-line\n    this.isRevoked = false;\n\n    this.inScope = false;\n\n    this.updateParent();\n    if (isSibling) {\n      this.initPrevSibling();\n    }\n\n    if (this.base) {\n      this.enterTrackerScope();\n    }\n  }\n\n  updateParent() {\n    if (this.parent) {\n      this.parent.children.push(this);\n    }\n  }\n\n  enterTrackerScope() {\n    this.enterContext();\n    const fn = this.useProxy ? createTracker : createES5Tracker;\n    this.proxy = fn(\n      this.base,\n      {\n        useRevoke: this.useRevoke,\n        useScope: this.useScope,\n        rootPath: this.rootPath,\n      },\n      this\n    );\n  }\n\n  enterContext() {\n    context.trackerNode = this;\n    this.inScope = true;\n  }\n\n  leaveContext() {\n    if (this.inScope) {\n      this.inScope = false;\n      context.trackerNode = null;\n    }\n\n    if (this.parent && this.parent.inScope) {\n      context.trackerNode = this.parent;\n    }\n  }\n\n  initPrevSibling() {\n    if (this.parent) {\n      const childNodes = this.parent.children;\n      const lastChild = childNodes[childNodes.length - 1];\n      this.prevSibling = lastChild;\n      if (lastChild) {\n        lastChild.nextSibling = this;\n      }\n    }\n  }\n\n  destroy() {\n    if (this.parent) {\n      const index = this.parent.children.indexOf(this);\n      this.parent.children.splice(index, 1);\n    }\n    const prev = this.prevSibling;\n    const next = this.nextSibling;\n\n    if (prev) {\n      if (next) prev.nextSibling = next;\n      else prev.nextSibling = null;\n    }\n\n    if (next) {\n      if (prev) next.prevSibling = prev;\n      else next.prevSibling = null;\n    }\n  }\n\n  contains(childNode: TrackerNode): boolean {\n    if (childNode === this) return true;\n    if (!childNode) return false;\n    const parent = childNode.parent;\n    if (!parent) return false;\n    if (parent === this) return true;\n    return this.contains(parent);\n  }\n\n  revokeLastChild() {\n    if (this.children.length) {\n      this.children[this.children.length - 1].revoke();\n    }\n  }\n\n  /**\n   *\n   * @param {null | TrackerNode} parent, null value means revoke until to top most.\n   */\n  revokeUntil(parent?: TrackerNode): boolean {\n    if (parent === this) return true;\n\n    if (parent) {\n      if (parent.isRevoked)\n        throw new Error('Assign a `revoked` parent is forbidden');\n    }\n\n    if (this.parent) {\n      // if (!parent) throw new Error('parent should exist')\n\n      // the top most node, still can not find `parent` node\n      // if (!this.parent) throw new Error('`parent` is not a valid `TrackerNode`')\n      if (this.parent) {\n        return this.parent.revokeUntil(parent);\n      }\n    }\n\n    return this.revokeSelf();\n  }\n\n  revokeSelf(): boolean {\n    if (this.children.length) {\n      this.children.forEach(child => {\n        if (!child.isRevoked) child.revokeSelf();\n      });\n    }\n    if (!this.isRevoked) {\n      this.proxy?.revoke();\n      this.isRevoked = true;\n    }\n    return true;\n  }\n\n  /**\n   * return context handler to parent node.\n   */\n  revoke() {\n    if (this.parent) {\n      this.proxy?.revoke();\n      context.trackerNode = this.parent;\n    }\n  }\n\n  hydrate(base: object, config: HydrateConfig = {}) {\n    this.base = base || this.base;\n    const keys = Object.keys(config || ({} as HydrateConfig));\n    // Object.keys always return 'string[]', So it need to\n    // convert explicitly\n    // https://stackoverflow.com/a/52856805/2006805\n    (keys as Array<keyof HydrateConfig>).forEach(key => {\n      // @ts-ignore\n      this[key] = config[key];\n    });\n    this.enterTrackerScope();\n  }\n}\n\nexport default TrackerNode;\n","import { IPatcher } from './types';\n\nclass Patcher implements IPatcher {\n  public autoRunFn: Function;\n  public paths: Array<Array<string>>;\n  public removers: Array<Function>;\n  public dirty: boolean;\n  public id: string;\n  public displayName: string;\n  public parent: null | Patcher;\n  public children: Array<any>;\n\n  constructor({\n    paths,\n    autoRunFn,\n    key,\n    parent,\n    displayName,\n  }: {\n    paths: Array<Array<string>>;\n    autoRunFn: Function;\n    key: string;\n    parent: null | Patcher;\n    displayName: string;\n  }) {\n    this.autoRunFn = autoRunFn;\n    this.paths = paths;\n\n    this.removers = [];\n    this.dirty = false;\n    this.id = key;\n    this.displayName = displayName;\n    this.parent = parent;\n    this.children = [];\n\n    if (this.parent) {\n      this.parent.children.push(this);\n    }\n  }\n\n  destroyPatcher() {\n    this.teardown();\n    if (this.children.length) {\n      this.children.forEach(child => child.destroyPatcher());\n    }\n\n    if (this.parent) {\n      this.parent.removeChild(this);\n    }\n    this.parent = null;\n  }\n\n  appendTo(parent: null | Patcher) {\n    if (this.parent) {\n      this.parent.removeChild(this);\n    }\n\n    if (parent) {\n      this.parent = parent;\n\n      if (parent.children.indexOf(this) === -1) {\n        parent.children.push(this);\n      }\n    }\n  }\n\n  belongs(parent: null | Patcher): boolean {\n    if (!parent) return false;\n\n    if (this.parent) {\n      if (this.parent === parent) {\n        return true;\n      }\n      return this.parent.belongs(parent);\n    }\n\n    return false;\n  }\n\n  removeChild(child: Patcher) {\n    const index = this.children.indexOf(child);\n    if (index !== -1) this.children.splice(index, 1);\n  }\n\n  update({ paths }: { paths: Array<Array<string>> }) {\n    this.paths = paths;\n    this.dirty = false;\n    this.teardown();\n  }\n\n  addRemover(remover: Function) {\n    this.removers.push(remover);\n  }\n\n  // 将patcher从PathNode上删除\n  teardown() {\n    this.removers.forEach(remover => remover());\n    this.removers = [];\n  }\n\n  markDirty() {\n    this.teardown();\n  }\n\n  markDirtyAll() {\n    this.teardown();\n\n    // If parent is dirty, then its children should be all dirty...\n    if (this.children.length) {\n      this.children.forEach(child => child.markDirtyAll());\n    }\n  }\n\n  triggerAutoRun() {\n    if (typeof this.autoRunFn === 'function') this.autoRunFn();\n  }\n}\n\nexport default Patcher;\n","import React, {\n  useContext,\n  useState,\n  useRef,\n  useEffect,\n  useCallback,\n  FC,\n} from 'react';\nimport context from './context';\nimport Tracker from './tracker';\nimport { generatePatcherKey } from './utils/key';\nimport Patcher from './Patcher';\nimport infoLog from './utils/infoLog';\nimport { TrackerNode, PropProperty } from './tracker/types';\n\nlet count = 0;\n\nconst Helper = ({ addListener }: { addListener: Function }) => {\n  addListener();\n  return null;\n};\n\nconst DEBUG = false;\n\nconst unMountMap: {\n  [key: string]: undefined | Patcher;\n} = {};\nconst reRenderMap: {\n  [key: string]: undefined | Patcher;\n} = {};\n\nconst diff = (\n  componentName: string,\n  patcher: undefined | Patcher,\n  proxy: undefined | TrackerNode\n) => {\n  const key1 = Object.keys(unMountMap);\n  if (key1.indexOf(componentName) !== -1) {\n    infoLog('invalid re-render', componentName, patcher, proxy);\n  }\n};\n\nexport default (WrappedComponent: FC<any>) => {\n  function NextComponent(props: any) {\n    const shadowState = useRef(0);\n    // @ts-ignore\n    const [_, setState] = useState(0); // eslint-disable-line\n    const storeName = useRef<string>();\n    const isHydrated = useRef(false);\n    const isInit = useRef(true);\n    const patcherUpdated = useRef(0);\n\n    const {\n      application,\n      useProxy,\n      namespace,\n      patcher: parentPatcher,\n      trackerNode: parentTrackerNode,\n      useRelinkMode,\n      ...rest\n    } = useContext(context);\n\n    const incrementCount = useRef(count++)  // eslint-disable-line\n    const componentName = `${NextComponent.displayName}-${incrementCount.current}`;\n    const patcher = useRef<undefined | Patcher>();\n    const trackerNode = useRef<undefined | TrackerNode>();\n\n    shadowState.current += 1;\n\n    const autoRunFn = () => {\n      setState(state => state + 1);\n      reRenderMap[componentName] = patcher.current;\n      diff(componentName, patcher.current, trackerNode.current);\n    };\n\n    useEffect(() => {\n      if (!DEBUG) return;\n      if (isInit.current) {\n        infoLog('[Observe]', `${componentName} is init`);\n        isInit.current = false;\n      } else {\n        infoLog('[Observe]', `${componentName} is re-rendered`);\n      }\n    });\n\n    if (!patcher.current) {\n      patcher.current = new Patcher({\n        paths: [],\n        autoRunFn,\n        parent: parentPatcher,\n        key: generatePatcherKey({\n          namespace: namespace as string,\n          componentName,\n        }),\n        displayName: NextComponent.displayName,\n      });\n    }\n\n    if (!trackerNode.current) {\n      // `base` should has a default value value `{}`, or it will cause error.\n      // Detail refer to https://github.com/ryuever/relinx/issues/6\n      trackerNode.current = Tracker({\n        base: {},\n        useProxy,\n        useRevoke: false,\n        useScope: true,\n        parent: parentTrackerNode,\n        rootPath: [],\n      });\n    }\n\n    if (trackerNode.current) {\n      trackerNode.current.enterContext();\n    }\n\n    // destroy `patcher` when component un-mount.\n    useEffect(\n      () => () => {\n        if (patcher.current) patcher.current.destroyPatcher();\n        unMountMap[componentName] = patcher.current;\n      },\n      [] // eslint-disable-line\n    );\n\n    const getData = useCallback(\n      () => ({\n        trackerNode: trackerNode.current,\n      }),\n      []\n    );\n\n    // onUpdate, `relink` relative paths value....\n    if (trackerNode.current.proxy) {\n      const proxy = trackerNode.current.proxy;\n      // 为什么如果进行remove的话，`propProperties`已经将旧key删除了呢。。。\n      const propProperties: Array<PropProperty> = proxy.getProp(\n        'propProperties'\n      );\n\n      propProperties.forEach(prop => {\n        try {\n          const { source } = prop;\n          const rootPath = source?.getProp('rootPath');\n          const storeName = rootPath[0];\n          const currentBase = application?.getStoreData(storeName);\n          source?.runFn('relinkBase', currentBase);\n        } catch (err) {\n          infoLog('[observe rebase propProperties]', err);\n        }\n      });\n\n      if (useRelinkMode) {\n        if (storeName.current) {\n          const base = application?.getStoreData(storeName.current);\n          proxy.runFn('rebase', base);\n        }\n      }\n\n      trackerNode.current.proxy.runFn('cleanup');\n    }\n\n    // only run one time\n    const attachStoreName = useCallback((name: string) => {\n      if (useRelinkMode) {\n        if (name && !isHydrated.current) {\n          storeName.current = name;\n          const initialState = application?.getStoreData(storeName.current);\n          trackerNode.current?.hydrate(initialState, {\n            rootPath: [storeName.current],\n          });\n          isHydrated.current = true;\n        }\n      } else {\n        storeName.current = name;\n        const initialState = application?.getStoreData(storeName.current);\n        trackerNode.current?.hydrate(initialState, {\n          rootPath: [storeName.current],\n        });\n        isHydrated.current = true;\n      }\n    }, []); // eslint-disable-line\n\n    const addListener = useCallback(() => {\n      patcher.current?.appendTo(parentPatcher); // maybe not needs\n      if (!trackerNode.current?.proxy) return;\n\n      const paths = trackerNode.current.proxy.runFn('getRemarkableFullPaths');\n      patcher.current?.update({ paths });\n      if (patcher.current) application?.addPatcher(patcher.current);\n      patcherUpdated.current += 1;\n      trackerNode.current.leaveContext();\n    }, []); // eslint-disable-line\n\n    const contextValue = {\n      ...rest,\n      getData,\n      application,\n      useProxy,\n      namespace,\n      useRelinkMode,\n      patcher: patcher.current,\n      trackerNode: trackerNode.current,\n      attachStoreName,\n    };\n\n    return (\n      <context.Provider value={contextValue}>\n        <React.Fragment>\n          <WrappedComponent {...props} />\n          <Helper addListener={addListener} />\n        </React.Fragment>\n      </context.Provider>\n    );\n  }\n\n  NextComponent.displayName =\n    WrappedComponent.displayName ||\n    WrappedComponent.name ||\n    'ObservedComponent';\n\n  return NextComponent;\n  // return React.memo(props => <NextComponent {...props} />, () => true)\n};\n","import React, { useRef } from 'react';\nimport context, { defaultValue } from './context';\nimport Application from './Application';\nimport { generateNamespaceKey } from './utils/key';\nimport { ProviderProps, BasicModelType } from './types';\n\n// https://fettblog.eu/typescript-react/children/\n// https://stackoverflow.com/questions/53958028/how-to-use-generics-in-props-in-react-in-a-functional-component\nfunction Provider<T extends BasicModelType<T>, K extends keyof T = keyof T>({\n  store,\n  children,\n  namespace,\n  useProxy = true,\n  useRelinkMode = true,\n  strictMode = false,\n}: ProviderProps<T>) {\n  const namespaceRef = useRef(namespace || generateNamespaceKey());\n  const application = useRef(\n    new Application<T, K>({\n      base: store.getState() as any,\n      namespace: namespaceRef.current,\n      strictMode,\n    })\n  );\n\n  store.bindApplication(application.current);\n  const dispatch = store.dispatch;\n\n  const contextValue = useRef({\n    ...defaultValue,\n    dispatch,\n    useProxy,\n    useRelinkMode,\n    namespace: namespaceRef.current,\n    application: application.current,\n  });\n\n  return (\n    <context.Provider value={contextValue.current}>{children}</context.Provider>\n  );\n}\n\nexport default Provider;\n","import compose from './utils/compose';\nimport {\n  BasicModelType,\n  CreateStoreFn,\n  CreateStoreOnlyModels,\n  Middleware,\n  UnionActions,\n} from './types';\n\nexport default function applyMiddleware(...middleware: Array<Middleware>) {\n  const nextMiddleware = [...middleware];\n  return <T extends BasicModelType<T>>(\n    createStore: CreateStoreFn<T>\n  ) => (config: {\n    models: CreateStoreOnlyModels<T>;\n    initialValue?: {\n      [key in keyof T]?: any;\n    };\n  }) => {\n    const store = createStore(config);\n    const initialState = store.getState();\n\n    const api = {\n      dispatch: (actions: UnionActions, ...rest: Array<any>) =>\n        store.dispatch(actions, ...rest),\n      getState: () => initialState,\n      store,\n    };\n\n    const chain = nextMiddleware.map(middleware => middleware<T>(api));\n    store.decorateDispatch(compose(...chain));\n\n    return store;\n  };\n}\n","// https://github.com/reduxjs/redux/blob/master/src/compose.ts\n\nexport default function compose(...funcs: Array<Function>) {\n  if (funcs.length === 0) {\n    return (arg: any) => arg;\n  }\n\n  if (funcs.length === 1) {\n    return funcs[0];\n  }\n\n  return funcs.reduce((a, b) => (...args: Array<Function>) => a(b(...args)));\n}\n","import Store from './Store';\n\nimport {\n  CreateStoreOnlyModels,\n  EnhanceFunction,\n  BasicModelType,\n} from './types';\n\nexport default function createStore<\n  T extends BasicModelType<T>,\n  MODEL_KEY extends keyof T = keyof T\n>(\n  configs: {\n    models: CreateStoreOnlyModels<T>;\n    initialValue?: {\n      [key in MODEL_KEY]?: any;\n    };\n  },\n  enhancer?: EnhanceFunction\n): Store<T> {\n  if (typeof enhancer === 'function') {\n    return enhancer<T, MODEL_KEY>(createStore)(configs);\n  }\n\n  return new Store(configs);\n}\n","import print from './print';\nimport { Next, Action, ApplyMiddlewareAPI, BasicModelType } from '../../types';\n\nexport default <T extends BasicModelType<T>>({\n  getState,\n}: ApplyMiddlewareAPI<T>) => (next: Next) => (\n  actions: Array<Action> | Function\n) => {\n  if (typeof actions !== 'function') {\n    const startTime = Date.now();\n    const prevState = JSON.parse(JSON.stringify(getState()));\n\n    next(actions);\n\n    const endTime = Date.now();\n\n    print({\n      actions,\n      prevState,\n      initialActions: actions,\n      startTime,\n      endTime,\n    });\n  }\n};\n\n// 结束的时间点。。。\n// 如果同步的reducers的话，最外层运行结束就是一个结点\n// 如果说是一个effect的话，这个时候会有很多的不确定性。或者同样是以外层结束作为一个结点；\n// 然后每一次有sub结束完就搞一次；最终的结论就是一个action可能会有多个的log\n","import { canIUseProxy } from './commons';\nimport context from './context';\nimport TrackerNode from './TrackerNode';\nimport invariant from 'invariant';\n\n/**\n * resolve `reactivePaths`, and wrap `autoRunFunc`\n * @param {*} param0\n */\nconst Tracker = ({\n  base,\n  parent,\n  useProxy = true,\n  useRevoke = false,\n  useScope = true,\n  rootPath = [],\n}: {\n  base: object;\n  parent: null | TrackerNode;\n  useProxy: boolean;\n  useRevoke: boolean;\n  useScope: boolean;\n  rootPath: Array<string>;\n}) => {\n  const assertAccessibility = (useScope: boolean, useRevoke: boolean) => {\n    invariant(\n      useRevoke !== useScope,\n      '`useRevoke` or `useScope` should not be equal; and one must be true' +\n        'If you do not have any idea, please leave to use default value.'\n    );\n  };\n\n  assertAccessibility(useScope, useRevoke);\n\n  const verifiedUseProxy = canIUseProxy() && useProxy;\n  const parentTrackerNode =\n    typeof parent !== 'undefined' ? parent : context.trackerNode;\n  let isSibling = false;\n\n  // re-create a top most node\n  if (!parentTrackerNode) {\n    // start another top level branch...like\n    // { a: { b: 1 }} => { a: { b: 1 }, c: {d: 2 }}\n    if (context.trackerNode && useRevoke) {\n      context.trackerNode.revokeUntil();\n    }\n  } else {\n    if (parentTrackerNode === context.trackerNode) {\n      // Add a child, for sibling, intersection access is forbidden.\n      if (useRevoke) {\n        parentTrackerNode.revokeLastChild();\n      }\n    } else if (useRevoke && context.trackerNode) {\n      // Add a parentTrackerNode's sibling, so `revokeUntil` is required.\n      context.trackerNode.revokeUntil(parentTrackerNode);\n    }\n\n    if (\n      context.trackerNode &&\n      parentTrackerNode === context.trackerNode.parent\n    ) {\n      isSibling = true;\n    }\n  }\n\n  return new TrackerNode({\n    parent: parentTrackerNode,\n    isSibling,\n    base,\n    useRevoke,\n    useScope,\n    useProxy: verifiedUseProxy,\n    rootPath,\n  });\n};\n\nexport default Tracker;\n","// @ts-nocheck\n\nimport {\n  Action,\n  Next,\n  ApplyMiddlewareAPI,\n  ExtractEffectsTypeOnlyModels,\n  ThunkFn,\n  Dispatch,\n  ThunkDispatch,\n} from '../types';\n\n/**\n * The basic format of action type is `storeKey/${type}`.\n * Only action in effect could ignore `storeKey`\n */\nexport default <T>({ getState, dispatch, store }: ApplyMiddlewareAPI<T>) => (\n  next: Next\n) => (actions: Array<Action> | Function, storeKey: keyof T) => {\n  if (typeof actions === 'function') {\n    const nextDispatch = (thunkActions: Array<Action> | Action) => {\n      const nextArgs = ([] as Array<Action>).concat(thunkActions) || [];\n      const actions = nextArgs\n        .map(action => {\n          if (!action) return null;\n          const { type, payload } = action;\n          // TODO: ts\n          const parts = [storeKey].concat(type.split('/') as any).slice(-2);\n          const nextAction: Action = {\n            type: parts.join('/'),\n          };\n          if (payload) {\n            nextAction.payload = payload;\n          }\n\n          return nextAction;\n        })\n        .filter(v => !!v) as Array<Action>;\n      if (actions.length) dispatch && (dispatch as Dispatch)(actions);\n    };\n    return actions(nextDispatch, getState);\n  }\n\n  const nextActions = ([] as Array<Action>).concat(actions);\n  const reducerActions: Array<Action> = [];\n  const effectActions: Array<Action> = [];\n\n  nextActions\n    .filter(action => {\n      if (Object.prototype.toString.call(action) === '[object Object]') {\n        const { type } = action;\n        return !!type;\n      }\n\n      return false;\n    })\n    .forEach(function(action: Action) {\n      try {\n        const { type } = action;\n        const parts = type.split('/');\n        const storeKey = parts[0] as keyof T;\n        const actionType = parts[1] as keyof ExtractEffectsTypeOnlyModels<\n          T\n        >[typeof storeKey];\n        const currentEffects = store.getEffects()[storeKey];\n\n        console.log('current ', currentEffects, storeKey, store);\n\n        if (currentEffects && currentEffects[actionType]) {\n          return effectActions.push(action);\n        }\n\n        return reducerActions.push(action);\n      } catch (info) {\n        return false;\n      }\n    });\n\n  if (reducerActions.length) {\n    next(reducerActions);\n  }\n\n  effectActions.forEach(action => {\n    const { type, payload } = action;\n    const parts = type.split('/');\n    const storeKey = parts[0] as keyof T;\n    const actionType = parts[1] as keyof ExtractEffectsTypeOnlyModels<\n      T\n    >[keyof T];\n    const currentEffects = store.getEffects()[storeKey];\n    const handler = (currentEffects[actionType] as unknown) as ThunkFn<T>;\n\n    dispatch && (dispatch as ThunkDispatch<T>)(handler(payload), storeKey);\n    // Promise.resolve()\n    //   .then(\n    //     () =>\n    //       dispatch && (dispatch as ThunkDispatch<T>)(handler(payload), storeKey)\n    //   )\n    //   .catch(err => {\n    //     // temp log error info\n    //     console.error(err);\n    //   });\n  });\n};\n","import { useContext } from 'react';\nimport context from '../context';\n\nexport default () => {\n  const { dispatch } = useContext(context);\n  return [dispatch];\n};\n","import { useContext } from 'react';\nimport invariant from 'invariant';\nimport context from '../context';\nimport { UseRelinxReturnValue } from '../types';\n\nexport default (storeName: string): UseRelinxReturnValue => {\n  const { dispatch, getData, attachStoreName } = useContext(context);\n\n  invariant(\n    typeof storeName === 'string' && storeName !== '',\n    '`storeName` is required'\n  );\n\n  invariant(!!getData, `'useRelinx' should be wrapper in observe function`);\n\n  attachStoreName(storeName);\n\n  const { trackerNode } = getData();\n\n  invariant(!!trackerNode.proxy, `[useRelinx]: 'getData' fails`);\n\n  return [trackerNode.proxy, dispatch];\n};\n"],"names":["noop","defaultValue","computation","dispatch","attachStoreName","useProxy","namespace","patcher","trackerNode","useRelinkMode","application","createContext","infoLog","args","console","log","PathNode","constructor","prop","parent","children","patchers","addPathNode","path","len","length","reduce","node","cur","index","childNode","push","addRemover","indexOf","splice","this","destroyPathNode","forEach","destroyPatcher","Object","keys","key","err","toString","Function","call","bind","prototype","isObject","obj","isTypeEqual","o1","o2","Application","base","strictMode","pendingPatchers","update","values","value","treeShake","updateBase","finalPatchers","i","current","l","found","y","belongs","triggerAutoRun","storeKey","changedValue","branch","baseValue","rootBaseValue","nextValue","toDestroy","compare","collections","operation","x","isArray","markDirty","caredKeys","keysToCompare","keysToDestroy","currentOperation","Array","nextLength","filter","parseInt","concat","isDelete","nextKeys","removed","a","b","parts","diffArraySimple","childBranch","displayName","joinedPath","join","warn","undefined","fn","addPatcher","paths","fullPath","getStoreData","storeName","storeValue","invariant","seenKeys","MULTIPLIER","Math","pow","patcherSeenKeys","generatePatcherKey","componentName","count","Store","configs","models","initialValue","_state","_reducers","_effects","injectModel","_application","subscriptions","_count","getState","getReducers","getEffects","setValue","actions","changedValues","changedValueGroup","action","type","payload","actionType","split","usedReducer","bindApplication","decorateDispatch","chainedMiddleware","generateSubscriptionKey","subscribe","subscription","model","state","reducers","effects","padding","paddingCount","slice","formatTime","d","date","Date","hh","getHours","mm","getMinutes","ss","getSeconds","ms","getMilliseconds","colorLine","apply","colorGroupEnd","groupEnd","colorGroupCollapsed","groupCollapsed","colorLog","group","text","t","styles","s","acc","subText","subStyle","paint","tree","actionKeys","effectKeys","props","style","renderSubAction","ownKeys","o","Reflect","getOwnPropertySymbols","getOwnPropertyNames","TRACKER","Symbol","isTrackable","shallowCopy","create","getPrototypeOf","inherit","subClass","superClass","createHiddenProperty","target","defineProperty","enumerable","writable","hideProperty","configurable","context","joinPath","generateRemarkablePaths","copy","accessMap","remarkablePaths","pathLength","isConsecutive","pop","p","str","find","internalFunctions","proto","assertLink","fnName","getProp","reportAccessPath","parentProxy","runFn","cleanup","setProp","unlink","relink","proxy","last","nextBaseValue","accessPath","nextProxy","peek","relinkProp","newValue","childProxies","v","createChild","relinkBase","rebase","setRemarkable","getRemarkableFullPaths","propProperties","rootPath","internalPaths","map","external","source","externalPaths","assertScope","contains","Error","id","ES5Tracker","useRevoke","useScope","createES5Tracker","config","TypeError","iter","desc","getOwnPropertyDescriptor","get","isPeeking","nextAccessPath","contextProxy","childProxy","proxyProperty","entry","descriptors","handler","func","functionContext","lengthGetter","arguments","remarkLengthPropKeys","tracker","rest","Type","ProxyTracker","createTracker","internalProps","receiver","hasOwnProperty","revoke","Proxy","revocable","TrackerNode","isSibling","prevSibling","nextSibling","isRevoked","inScope","updateParent","initPrevSibling","enterTrackerScope","enterContext","leaveContext","childNodes","lastChild","destroy","prev","next","revokeLastChild","revokeUntil","revokeSelf","child","hydrate","Patcher","autoRunFn","removers","dirty","teardown","removeChild","appendTo","remover","markDirtyAll","Helper","addListener","unMountMap","store","namespaceRef","useRef","isNaN","floor","random","generateNamespaceKey","contextValue","React","Provider","middleware","nextMiddleware","createStore","initialState","api","chain","funcs","arg","compose","enhancer","startTime","now","prevState","JSON","parse","stringify","initialActions","endTime","title","actionColor","startsWith","renderTitle","isNextState","renderState","nextActions","paintActions","print","WrappedComponent","NextComponent","shadowState","_","setState","useState","isHydrated","patcherUpdated","parentPatcher","parentTrackerNode","useContext","incrementCount","useEffect","diff","assertAccessibility","verifiedUseProxy","canIUseProxy","Tracker","getData","useCallback","currentBase","name","_trackerNode$current3","Fragment","thunkActions","nextAction","reducerActions","effectActions","currentEffects","info"],"mappings":"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"}