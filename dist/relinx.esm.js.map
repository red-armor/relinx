{"version":3,"file":"relinx.esm.js","sources":["../src/context.ts","../src/utils/infoLog.ts","../src/PathNode.ts","../src/utils/toString.ts","../src/utils/ifType.ts","../src/utils/shallowEqual.ts","../src/Application.ts","../src/utils/key.ts","../src/Provider.tsx","../src/utils/compose.ts","../src/applyMiddleware.ts","../src/AutoRunner.ts","../src/autoRun.ts","../src/Store.ts","../src/createStore.ts","../src/hooks/useRelinx.ts","../src/hooks/useDispatch.ts","../src/hooks/useNamespace.ts","../src/globalHelper.ts","../src/hooks/useGlobal.ts","../src/middleware/thunk.ts","../src/middleware/logger/utils.ts","../src/middleware/logger/print.ts","../src/middleware/logger/index.ts","../src/Patcher.ts","../src/observe.tsx"],"sourcesContent":["import { createContext } from 'react';\nimport { ContextDefaultValue } from './types';\n\nconst calculateChangeBits = () => 0b00;\nconst noop = () => {};\n\nexport const defaultValue = {\n  computation: null,\n  dispatch: noop,\n  attachStoreName: noop,\n  useProxy: true,\n  namespace: null,\n  patcher: null,\n  trackerNode: null,\n  useRelinkMode: true,\n  application: null,\n};\n\n// @ts-ignore\nexport default createContext<ContextDefaultValue<T, M>>(\n  defaultValue,\n  // @ts-ignore\n  calculateChangeBits\n);\n","/**\n * Intentional info-level logging for clear separation from ad-hoc console debug logging.\n */\nfunction infoLog(...args: Array<any>) {\n  console.log('**DEBUG**', ...args); // eslint-disable-line\n}\n\nexport default infoLog;\n","import infoLog from './utils/infoLog';\nimport Patcher from './Patcher';\nimport AutoRunner from './AutoRunner';\n\nconst DEBUG = false;\n\ntype Children = {\n  [key: string]: PathNode;\n};\n\ntype ToHandlerMap<T> = T extends Field.Patchers ? Patcher : AutoRunner;\n\nenum Field {\n  Patchers = 'patchers',\n  AutoRunners = 'autoRunners',\n}\n\nclass PathNode {\n  private parent: PathNode | undefined;\n  public patchers: Array<Patcher>;\n  public autoRunners: Array<AutoRunner>;\n  public children: Children;\n  private prop: string;\n\n  constructor(prop?: string, parent?: PathNode) {\n    this.prop = prop || 'root';\n\n    this.parent = parent;\n    this.children = {};\n    this.patchers = [];\n    this.autoRunners = [];\n  }\n\n  addPatcher(path: Array<string>, patcher: Patcher) {\n    this.addPathNode(path, patcher, Field.Patchers);\n  }\n\n  destroyPatcher() {}\n\n  addAutoRunner(path: Array<string>, autoRunner: AutoRunner) {\n    this.addPathNode(path, autoRunner, Field.AutoRunners);\n  }\n\n  destroyAutoRunner() {}\n\n  getCollection<T extends Field>(field: T): Array<Patcher> | Array<AutoRunner> {\n    if (field === Field.Patchers) {\n      return this.patchers;\n    }\n    return this.autoRunners;\n  }\n\n  addPathNode<T extends Field>(\n    path: Array<string>,\n    handler: ToHandlerMap<T>,\n    field: T\n  ) {\n    try {\n      const len = path.length;\n      path.reduce<PathNode>((node: PathNode, cur: string, index: number) => {\n        // path中前面的值都是为了让我们定位到最后的需要关心的位置\n        if (!node.children[cur]) node.children[cur] = new PathNode(cur, node);\n        // 只有到达`path`的最后一个`prop`时，才会进行patcher的添加\n        if (index === len - 1) {\n          const childNode = node.children[cur];\n          if (DEBUG) {\n            infoLog('[PathNode add handler]', childNode, handler);\n          }\n          const collection = childNode.getCollection(field) as Array<\n            ToHandlerMap<T>\n          >;\n\n          if (collection) {\n            collection.push(handler);\n            handler.addRemover(() => {\n              const index = collection.indexOf(handler);\n\n              if (DEBUG) {\n                infoLog('[PathNode remove handler]', handler.id, childNode);\n              }\n              if (index !== -1) {\n                collection.splice(index, 1);\n              }\n            });\n          }\n        }\n        return node.children[cur];\n      }, this);\n    } catch (err) {\n      // console.log('err ', err)\n    }\n  }\n\n  destroyPathNode() {\n    try {\n      this.patchers.forEach(patcher => patcher.destroyPatcher());\n\n      if (this.children) {\n        const childKeys = Object.keys(this.children);\n        childKeys.forEach(key => {\n          const pathNode = this.children[key];\n          pathNode.destroyPathNode();\n        });\n      }\n\n      if (this.parent) {\n        delete this.parent.children[this.prop];\n      }\n    } catch (err) {\n      infoLog('[PathNode destroy issue]', err);\n    }\n  }\n}\n\nexport default PathNode;\n","const toString = Function.call.bind(Object.prototype.toString);\n\nexport default toString;\n","import toString from './toString';\n\nexport const isPresent = (o: any) => typeof o !== 'undefined';\nexport const isObject = (obj: any) => toString(obj) === '[object Object]';\nexport const isArray = (obj: any) => toString(obj) === '[object Array]';\nexport const isNumber = (obj: any) => toString(obj) === '[object Number]';\nexport const isString = (obj: any) => toString(obj) === '[object String]';\nexport const isBoolean = (obj: any) => toString(obj) === '[object Boolean]';\n\nexport const isMutable = (obj: any) => isObject(obj) || isArray(obj);\nexport const isPrimitive = (obj: any) =>\n  isNumber(obj) || isString(obj) || isBoolean(obj);\nexport const isTypeEqual = (o1: any, o2: any) => toString(o1) === toString(o2);\n\nexport const isStrictEmptyObject = (obj: any) => {\n  if (!isObject(obj)) return false;\n\n  for (const prop in obj) { // eslint-disable-line\n    if (obj.hasOwnProperty(prop)) return false // eslint-disable-line\n  }\n  return true;\n};\n\nexport const isStrictEmptyArray = (arr: any) => isArray(arr) && !arr.length;\n\nexport const hasEmptyItem = (...args: Array<any>) =>\n  args.some(arg => isStrictEmptyArray(arg) || isStrictEmptyObject(arg));\n","// https://github.com/facebook/react/blob/144328fe81719e916b946e22660479e31561bb0b/packages/shared/shallowEqual.js#L36-L68\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n/* eslint-disable no-self-compare */\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * inlined Object.is polyfill to avoid requiring consumers ship their own\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */\nfunction is(x: any, y: any) {\n  // SameValue algorithm\n  if (x === y) {\n    // Steps 1-5, 7-10\n    // Steps 6.b-6.e: +0 != -0\n    // Added the nonzero y check to make Flow happy, but it is redundant\n    return x !== 0 || y !== 0 || 1 / x === 1 / y;\n  }\n  // Step 6.a: NaN == NaN\n  return x !== x && y !== y;\n}\n\n/**\n * Performs equality by iterating through keys on an object and returning false\n * when any key has values which are not strictly equal between the arguments.\n * Returns true when the values of all keys are strictly equal.\n */\nfunction shallowEqual(objA: any, objB: any) {\n  if (is(objA, objB)) {\n    return true;\n  }\n\n  if (\n    typeof objA !== 'object' ||\n    objA === null ||\n    typeof objB !== 'object' ||\n    objB === null\n  ) {\n    return false;\n  }\n\n  const keysA = Object.keys(objA);\n  const keysB = Object.keys(objB);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n\n  // Test for A's keys different from B.\n  for (let i = 0; i < keysA.length; i++) {\n    if (\n      !hasOwnProperty.call(objB, keysA[i]) ||\n      !is(objA[keysA[i]], objB[keysA[i]])\n    ) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport default shallowEqual;\n","import PathNode from './PathNode';\nimport infoLog from './utils/infoLog';\nimport { isTypeEqual, isPrimitive, isMutable } from './utils/ifType';\nimport shallowEqual from './utils/shallowEqual';\nimport {\n  Action,\n  IApplication,\n  GenericState,\n  PendingPatcher,\n  PendingAutoRunner,\n  ChangedValueGroup,\n} from './types';\nimport Patcher from './Patcher';\nimport produce, { ProxyState } from 'state-tracker';\nimport AutoRunner from './AutoRunner';\n\nclass Application<T, K extends keyof T> implements IApplication<T, K> {\n  public base: GenericState<T, K>;\n  public node: PathNode;\n  public autoRunnerNode: PathNode;\n  public pendingPatchers: Array<PendingPatcher>;\n  public pendingAutoRunners: Array<PendingAutoRunner>;\n  public pendingCleaner: Array<Function>;\n  public namespace: string;\n  public strictMode: boolean;\n  public proxyState: ProxyState;\n\n  constructor({\n    base,\n    namespace,\n    strictMode,\n  }: {\n    base: GenericState<T, K>;\n    namespace: string;\n    strictMode: boolean;\n  }) {\n    this.base = base;\n    this.node = new PathNode();\n    this.autoRunnerNode = new PathNode();\n    this.pendingPatchers = [];\n    this.pendingAutoRunners = [];\n    this.pendingCleaner = [];\n    this.namespace = namespace;\n    this.strictMode = strictMode;\n    this.proxyState = produce(this.base);\n  }\n\n  processAutoRunner(values: Array<ChangedValueGroup<K>>) {\n    this.pendingAutoRunners = [];\n\n    try {\n      values.forEach(value => this.treeShakeAutoRunner(value));\n    } catch (err) {\n      infoLog('[Application] processAutoRunner issue ', err);\n    }\n  }\n\n  update(values: Array<ChangedValueGroup<K>>) {\n    try {\n      values.forEach(value => this.treeShake(value));\n      values.forEach(value => this.updateBase(value));\n    } catch (err) {\n      infoLog('[Application] update issue ', err);\n    }\n\n    this.pendingPatchers.forEach(({ patcher }) => {\n      patcher.triggerAutoRun();\n    });\n    this.pendingPatchers = [];\n\n    this.pendingAutoRunners = [];\n\n    this.pendingCleaner.forEach(clean => clean());\n    this.pendingCleaner = [];\n  }\n\n  updateDryRun(values: Array<ChangedValueGroup<K>>): Array<Action> {\n    let actions = [] as Array<Action>;\n\n    try {\n      values.forEach(value => this.treeShake(value));\n      this.processAutoRunner(values);\n      values.forEach(value => this.updateBase(value));\n      this.pendingAutoRunners.forEach(({ autoRunner }) => {\n        actions = actions.concat(autoRunner.triggerAutoRun());\n      });\n    } catch (err) {\n      infoLog('[Application] update issue ', err);\n    }\n\n    return actions;\n  }\n\n  updateBase({\n    storeKey,\n    changedValue,\n  }: {\n    storeKey: K;\n    changedValue: object;\n  }) {\n    const origin = this.base[storeKey] || ({} as any);\n    this.proxyState.relink([storeKey as string], {\n      ...origin,\n      ...changedValue,\n    });\n  }\n\n  addPatchers(patchers: Array<Patcher>) {\n    if (patchers.length) {\n      patchers.forEach(patcher => {\n        this.pendingPatchers.push({ patcher });\n      });\n      patchers.forEach(patcher => {\n        patcher.markDirty();\n      });\n    }\n  }\n\n  addAutoRunners(autoRunners: Array<AutoRunner>) {\n    if (autoRunners.length) {\n      autoRunners.forEach(autoRunner => {\n        if (!autoRunner.isDirty()) {\n          this.pendingAutoRunners.push({ autoRunner });\n          this.pendingCleaner.push(autoRunner.markClean.bind(autoRunner));\n        }\n      });\n      autoRunners.forEach(autoRunner => {\n        autoRunner.markDirty();\n      });\n    }\n  }\n\n  compare(\n    branch: PathNode,\n    baseValue: {\n      [key: string]: any;\n    },\n    nextValue: {\n      [key: string]: any;\n    },\n    cb: {\n      (pathNode: PathNode): void;\n    }\n  ) {\n    const keysToCompare = Object.keys(branch.children);\n\n    keysToCompare.forEach(key => {\n      const oldValue = baseValue[key];\n      const newValue = nextValue[key];\n\n      if (shallowEqual(oldValue, newValue)) return;\n\n      if (isTypeEqual(oldValue, newValue)) {\n        if (isPrimitive(newValue)) {\n          if (oldValue !== newValue) {\n            cb(branch.children[key]);\n            // this.addPatchers(branch.children[key].patchers);\n          }\n        }\n\n        if (isMutable(newValue)) {\n          const childBranch = branch.children[key];\n          this.compare(childBranch, oldValue, newValue, cb);\n          return;\n        }\n\n        return;\n      }\n      cb(branch.children[key]);\n      // this.addPatchers(branch.children[key].patchers);\n    });\n  }\n\n  treeShakeAutoRunner({\n    storeKey,\n    changedValue,\n  }: {\n    storeKey: K;\n    changedValue: object;\n  }) {\n    const branch = this.autoRunnerNode.children[storeKey as any];\n    const baseValue = this.base[storeKey];\n    const nextValue = { ...baseValue, ...changedValue };\n\n    // why it could be undefined. please refer to https://github.com/ryuever/relinx/issues/4\n    if (!branch) return;\n    this.compare(branch, baseValue, nextValue, (pathNode: PathNode) => {\n      this.addAutoRunners(pathNode.autoRunners);\n    });\n  }\n\n  /**\n   *\n   * Recently it only support `Array`, `Object`, `Number`, `String` and `Boolean` five\n   * types..\n   */\n  treeShake({ storeKey, changedValue }: { storeKey: K; changedValue: object }) {\n    const branch = this.node.children[storeKey as any];\n    const baseValue = this.base[storeKey];\n    const nextValue = { ...baseValue, ...changedValue };\n\n    // why it could be undefined. please refer to https://github.com/ryuever/relinx/issues/4\n    if (!branch) return;\n    this.compare(branch, baseValue, nextValue, (pathNode: PathNode) => {\n      this.addPatchers(pathNode.patchers);\n    });\n  }\n\n  addPatcher(patcher: Patcher) {\n    const paths = patcher.paths;\n\n    paths.forEach(fullPath => {\n      this.node.addPatcher(fullPath, patcher);\n    });\n  }\n\n  addAutoRunner(autoRunner: AutoRunner) {\n    const paths = autoRunner.paths;\n    paths.forEach(fullPath => {\n      this.autoRunnerNode.addAutoRunner(fullPath, autoRunner);\n    });\n  }\n\n  getStoreData(storeName: K): T[K] {\n    const storeValue = this.base[storeName];\n    return storeValue;\n  }\n}\n\nexport default Application;\n","// https://github.com/facebook/draft-js/blob/master/src/model/keys/generateRandomKey.js\n\ninterface SeenKeys {\n  [key: string]: boolean;\n}\n\ninterface PatcherIds {\n  [key: string]: number;\n}\n\ninterface PatcherSeenKeys {\n  [key: string]: {\n    [key: string]: number;\n  };\n}\n\nconst seenKeys: SeenKeys = {};\nconst MULTIPLIER = Math.pow(2, 24) // eslint-disable-line\n\nexport const generateNamespaceKey = () => {\n  let key;\n\n  while (key === undefined || seenKeys.hasOwnProperty(key) || !isNaN(+key)) { // eslint-disable-line\n    key = Math.floor(Math.random() * MULTIPLIER).toString(32);\n  }\n\n  seenKeys[key] = true;\n  return key;\n};\n\nconst patcherIds: PatcherIds = {};\nexport const generatePatcherId = ({\n  namespace,\n}: {\n  namespace: string;\n}): string => {\n  const count = patcherIds[namespace] || 0;\n  const next = count + 1;\n  patcherIds[namespace] = next;\n  return `${namespace}_patcherId_${count}`;\n};\n\nconst patcherSeenKeys: PatcherSeenKeys = {};\nexport const generatePatcherKey = ({\n  namespace,\n  componentName,\n}: {\n  namespace: string;\n  componentName: string;\n}) => {\n  if (!patcherSeenKeys[namespace]) patcherSeenKeys[namespace] = {};\n  const count = patcherSeenKeys[namespace][componentName] || 0;\n  const next = count + 1;\n  patcherSeenKeys[namespace][componentName] = next;\n  return `${namespace}_${componentName}_patcher_${count}`;\n};\n\nexport const generateRandomGlobalActionKey = () => Math.floor(Math.random() * MULTIPLIER).toString(32) // eslint-disable-line\n","import React, { useRef } from 'react';\nimport context, { defaultValue } from './context';\nimport Application from './Application';\nimport { generateNamespaceKey } from './utils/key';\nimport { ProviderProps, BasicModelType } from './types';\n\n// https://fettblog.eu/typescript-react/children/\n// https://stackoverflow.com/questions/53958028/how-to-use-generics-in-props-in-react-in-a-functional-component\nfunction Provider<T extends BasicModelType<T>, K extends keyof T = keyof T>({\n  store,\n  children,\n  namespace,\n  useProxy = true,\n  useRelinkMode = true,\n  strictMode = false,\n  useScope = true,\n}: ProviderProps<T>) {\n  const namespaceRef = useRef(namespace || generateNamespaceKey());\n  const application = useRef<Application<T, K>>();\n  if (!application.current) {\n    application.current = new Application<T, K>({\n      base: store.getState() as any,\n      namespace: namespaceRef.current,\n      strictMode,\n    });\n  }\n\n  store.bindApplication(application.current);\n  const dispatch = store.dispatch;\n\n  const contextValue = useRef({\n    ...defaultValue,\n    dispatch,\n    useProxy,\n    useScope,\n    useRelinkMode,\n    namespace: namespaceRef.current,\n    application: application.current,\n  });\n\n  return (\n    <context.Provider value={contextValue.current}>{children}</context.Provider>\n  );\n}\n\nexport default Provider;\n","// https://github.com/reduxjs/redux/blob/master/src/compose.ts\n\nexport default function compose(...funcs: Array<Function>) {\n  if (funcs.length === 0) {\n    return (arg: any) => arg;\n  }\n\n  if (funcs.length === 1) {\n    return funcs[0];\n  }\n\n  return funcs.reduce((a, b) => (...args: Array<Function>) => a(b(...args)));\n}\n","import compose from './utils/compose';\nimport {\n  BasicModelType,\n  CreateStoreFn,\n  CreateStoreOnlyModels,\n  Middleware,\n  UnionActions,\n} from './types';\n\nexport default function applyMiddleware(...middleware: Array<Middleware>) {\n  const nextMiddleware = [...middleware];\n  return <T extends BasicModelType<T>>(\n    createStore: CreateStoreFn<T>\n  ) => (config: {\n    models: CreateStoreOnlyModels<T>;\n    initialValue?: {\n      [key in keyof T]?: any;\n    };\n  }) => {\n    const store = createStore(config);\n    const initialState = store.getState();\n\n    const api = {\n      dispatch: (actions: UnionActions, ...rest: Array<any>) =>\n        store.dispatch(actions, ...rest),\n      getState: () => initialState,\n      store,\n    };\n\n    const chain = nextMiddleware.map(middleware => middleware<T>(api));\n    store.decorateDispatch(compose(...chain));\n\n    return store;\n  };\n}\n","import { AutoRunnerProps } from './types';\n\nlet count = 1;\nclass AutoRunner {\n  private _isDirty: boolean;\n  public paths: Array<Array<string>>;\n  public autoRunFn: Function;\n  public id: string;\n  public removers: Array<Function>;\n\n  constructor({ paths, autoRunFn }: AutoRunnerProps) {\n    this.id = `autoRunner_${count++}`;\n    this.paths = paths;\n    this.autoRunFn = autoRunFn;\n    this._isDirty = false;\n    this.removers = [];\n  }\n\n  addRemover(remover: Function) {\n    this.removers.push(remover);\n  }\n\n  teardown() {\n    this.removers.forEach(remover => remover());\n    this.removers = [];\n  }\n\n  markDirty() {\n    this._isDirty = true;\n  }\n\n  markClean() {\n    this._isDirty = false;\n  }\n\n  isDirty(): boolean {\n    return this._isDirty;\n  }\n\n  triggerAutoRun() {\n    return this.autoRunFn() || [];\n  }\n}\n\nexport default AutoRunner;\n","import invariant from 'invariant';\nimport Application from './Application';\nimport AutoRunner from './AutoRunner';\n\nconst autoRun = <T, K extends keyof T>(\n  fn: Function,\n  application: Application<T, K>\n) => {\n  invariant(application, 'application is required to be initialized already !');\n\n  const state = application.proxyState;\n\n  state.enter();\n  fn({ state });\n  const tracker = state.getContext().getCurrent();\n  const paths = tracker.getRemarkable();\n\n  const autoRunner = new AutoRunner({\n    paths,\n    autoRunFn: () => {\n      return fn({ state });\n    },\n  });\n\n  application.addAutoRunner(autoRunner);\n\n  state.leave();\n};\n\nexport default autoRun;\n","import Application from './Application';\nimport {\n  Action,\n  InternalDispatch,\n  Subscription,\n  BasicModelType,\n  AutoRunSubscriptions,\n  ChangedValueGroup,\n  CreateStoreOnlyModels,\n  ExtractStateTypeOnlyModels,\n  ExtractEffectsTypeOnlyModels,\n  ExtractReducersTypeOnlyModels,\n  PendingAutoRunInitialization,\n} from './types';\nimport autoRun from './autoRun';\n\nclass Store<T extends BasicModelType<T>, MODEL_KEY extends keyof T = keyof T> {\n  private _application: Application<T, MODEL_KEY> | null;\n  private _count: number;\n  public dispatch: InternalDispatch;\n  private _state: ExtractStateTypeOnlyModels<T>;\n  private _reducers: ExtractReducersTypeOnlyModels<T>;\n  private _effects: ExtractEffectsTypeOnlyModels<T>;\n  private _pendingAutoRunInitializations: Array<PendingAutoRunInitialization>;\n  private _pendingActions: Array<Action>;\n  public initialState: any;\n  public subscriptions: {\n    [key: string]: Subscription<ExtractStateTypeOnlyModels<T>>;\n  };\n\n  constructor(configs: {\n    models: CreateStoreOnlyModels<T>;\n    initialValue?: {\n      [key in MODEL_KEY]?: any;\n    };\n  }) {\n    const models = configs.models;\n    const initialValue = configs.initialValue || ({} as any);\n\n    this._state = {} as ExtractStateTypeOnlyModels<T>;\n    this._reducers = {} as ExtractReducersTypeOnlyModels<T>;\n    this._effects = {} as ExtractEffectsTypeOnlyModels<T>;\n    this._pendingActions = [];\n    this._pendingAutoRunInitializations = [];\n\n    const keys = Object.keys(models) as Array<MODEL_KEY>;\n\n    keys.forEach(key => {\n      this.injectModel(key, models[key], initialValue[key]);\n    });\n\n    this.dispatch = () => {};\n    this._application = null;\n    this.subscriptions = {};\n    this._count = 0;\n  }\n\n  getState(): ExtractStateTypeOnlyModels<T> {\n    return this._state;\n  }\n\n  getReducers(): ExtractReducersTypeOnlyModels<T> {\n    return this._reducers;\n  }\n\n  getEffects(): ExtractEffectsTypeOnlyModels<T> {\n    return this._effects;\n  }\n\n  resolveActions(actions: Array<Action>) {\n    return actions.reduce<Array<ChangedValueGroup<MODEL_KEY>>>(\n      (changedValueGroup, action) => {\n        if (!this._application) return [];\n        const { type, payload } = action;\n        const [storeKey, actionType] = type.split('/') as [\n          MODEL_KEY,\n          keyof ExtractReducersTypeOnlyModels<T>\n        ];\n        const usedReducer = this._reducers[storeKey];\n\n        // If usedReducer is null, Maybe you have dispatched an unregistered action.\n        // On this condition, put these actions to `this._pendingActions`\n        if (!usedReducer) {\n          this._pendingActions.push(action);\n        } else if (usedReducer[actionType]) {\n          const currentState = this._application.base[storeKey];\n          const changedValue = usedReducer[actionType](currentState, payload);\n          changedValueGroup.push({\n            storeKey,\n            changedValue,\n          });\n        } else {\n          console.warn(`Do not have action '${actionType}'`);\n        }\n\n        return changedValueGroup;\n      },\n      []\n    );\n  }\n\n  setValue(actions: Array<Action>) {\n    const nextActions = ([] as Array<Action>).concat(actions);\n    const changedValues = this.resolveActions(nextActions);\n\n    if (changedValues.length) {\n      // updateDryRun do two things\n      // 1. resolve pendingPatchers\n      // 2. assign application.base with new value.\n      // Note: on this step, pendingPatchers do not execute\n      const derivedActions =\n        this._application?.updateDryRun(changedValues) || [];\n      // model.subscriptions may cause new value update..\n      const derivedChangedValue = this.resolveActions(derivedActions!);\n      this._application?.update(derivedChangedValue);\n\n      const storeSubscriptionsKeys = Object.keys(this.subscriptions);\n      const storeSubscriptionsKeysLength = storeSubscriptionsKeys.length;\n      // Only if there are store subscriptions. it requires to calculate old and new value..\n      if (storeSubscriptionsKeysLength) {\n        const toObject = changedValues.reduce<\n          {\n            [key in MODEL_KEY]: object;\n          }\n        >(\n          (acc, cur) => {\n            const { storeKey, changedValue } = cur;\n            acc[storeKey] = {\n              ...acc[storeKey],\n              ...changedValue,\n            };\n            return acc;\n          },\n          {} as {\n            [key in MODEL_KEY]: object;\n          }\n        );\n        const oldState = {\n          ...this._application?.base,\n        } as ExtractStateTypeOnlyModels<T>;\n        const newState = {\n          ...this._application?.base,\n          ...toObject,\n        } as ExtractStateTypeOnlyModels<T>;\n        for (let i = 0; i < storeSubscriptionsKeysLength; i++) {\n          const key = storeSubscriptionsKeys[i];\n          const subscription = this.subscriptions[key];\n          subscription({\n            oldState,\n            newState,\n            diff: toObject as Partial<ExtractStateTypeOnlyModels<T>>,\n          });\n        }\n      }\n    }\n  }\n\n  bindApplication(application: Application<T, MODEL_KEY>) {\n    this._application = application;\n    this.runPendingAutoRunInitialization();\n  }\n\n  runPendingAutoRunInitialization() {\n    if (this._pendingAutoRunInitializations.length) {\n      this._pendingAutoRunInitializations.forEach(initialization => {\n        const { autoRunFn } = initialization;\n        autoRun(autoRunFn, this._application!);\n      });\n      this._pendingAutoRunInitializations = [];\n    }\n  }\n\n  decorateDispatch(chainedMiddleware: Function) {\n    this.dispatch = chainedMiddleware(this.setValue.bind(this));\n  }\n\n  generateSubscriptionKey(): string {\n    return `store_${this._count++}`;\n  }\n\n  subscribe(\n    subscription: Subscription<ExtractStateTypeOnlyModels<T>>\n  ): Function {\n    const key = this.generateSubscriptionKey();\n    this.subscriptions[key] = subscription;\n    return () => delete this.subscriptions[key];\n  }\n\n  injectModel(key: MODEL_KEY, model: any, initialValue: any = {}) {\n    const { state, reducers = {}, effects = {} } = model;\n    const subscriptions = model.subscriptions || ({} as AutoRunSubscriptions);\n    // consume all the pending actions.\n    let base = this._application?.getStoreData(key) || {\n      ...state,\n      ...initialValue,\n    };\n\n    const nextPendingActions = this._pendingActions.filter(action => {\n      const { type, payload } = action;\n      const [storeKey, actionType] = type.split('/') as [\n        MODEL_KEY,\n        keyof ExtractReducersTypeOnlyModels<T>\n      ];\n\n      // only process action with current injected model's tag\n      if (key === storeKey) {\n        const reducer = reducers[actionType];\n        const effect = effects[actionType];\n\n        let nextState = base;\n\n        if (typeof reducer === 'function') {\n          nextState = reducer(base, payload);\n          base = { ...base, ...nextState };\n          // what if pending action is an effect. call dispatch again to re-run...\n          // But, there is still a condition, effects followed by normal reducer...\n          // The result may override by effect...\n        } else if (typeof effect === 'function') {\n          this.dispatch(action);\n        } else {\n          console.warn(\n            `Maybe you have dispatched an unregistered model's effect action(${action})`\n          );\n        }\n      }\n\n      return storeKey !== key;\n    });\n\n    const subscriptionsKeys = Object.keys(subscriptions);\n    subscriptionsKeys.forEach(autoRunKey => {\n      const autoRunFn = subscriptions[autoRunKey];\n\n      if (!this._application) {\n        this._pendingAutoRunInitializations.push({\n          modelKey: key as string,\n          autoRunKey,\n          autoRunFn,\n        });\n      } else {\n        autoRun<T, MODEL_KEY>(autoRunFn, this._application);\n      }\n    });\n\n    this._state[key] = base;\n    this._pendingActions = nextPendingActions;\n\n    this._application?.updateBase({\n      storeKey: key,\n      changedValue: base,\n    });\n\n    if (reducers) this._reducers[key] = reducers as any;\n    if (effects) this._effects[key] = effects as any;\n  }\n}\n\nexport default Store;\n","import Store from './Store';\n\nimport {\n  CreateStoreOnlyModels,\n  EnhanceFunction,\n  BasicModelType,\n} from './types';\n\nexport default function createStore<\n  T extends BasicModelType<T>,\n  MODEL_KEY extends keyof T = keyof T\n>(\n  configs: {\n    models: CreateStoreOnlyModels<T>;\n    initialValue?: {\n      [key in MODEL_KEY]?: any;\n    };\n  },\n  enhancer?: EnhanceFunction\n): Store<T> {\n  if (typeof enhancer === 'function') {\n    return enhancer<T, MODEL_KEY>(createStore)(configs);\n  }\n\n  return new Store(configs);\n}\n","import { useContext } from 'react';\nimport context from '../context';\nimport {\n  RelinxState,\n  RelinxDispatch,\n  UseRelinxReturnValue,\n  ContextDefaultValue,\n} from '../types';\n\nexport default <T, M, K extends keyof T = any>(\n  storeName: K\n): UseRelinxReturnValue<T, M, K> => {\n  const { dispatch, application, componentName } = useContext<\n    ContextDefaultValue<T, M>\n  >(context);\n\n  const proxyState = application?.proxyState;\n  const state = proxyState!.peek([storeName as string]);\n  const tracker = state.getTracker();\n  tracker.setContext(componentName!);\n\n  return [\n    (state as any) as RelinxState<T, M, K>,\n    dispatch as RelinxDispatch<T, M>,\n  ];\n};\n","import { useContext } from 'react';\nimport context from '../context';\nimport { ContextDefaultValue, RelinxDispatch } from '../types';\n\nexport default <T, M>(): [RelinxDispatch<T, M>] => {\n  const { dispatch } = useContext<ContextDefaultValue<T, M>>(context);\n  return [dispatch as RelinxDispatch<T, M>];\n};\n","import { useContext } from 'react';\nimport context from '../context';\n\nexport default (): string => {\n  const { namespace } = useContext(context);\n  return namespace!;\n};\n","import { Collections, Action } from './types';\n\nclass GlobalHelper {\n  public collections: Collections;\n  constructor() {\n    this.collections = [];\n  }\n\n  addAction(actionKey: string, namespace: string, actions: Array<Action>) {\n    this.collections.push({\n      actionKey,\n      namespace,\n      remover: () => {\n        const index = this.collections.findIndex(\n          ({ actionKey: key }) => key === actionKey\n        );\n        if (index !== -1) this.collections.splice(index, 1);\n      },\n      actions,\n    });\n  }\n}\n\nexport default new GlobalHelper();\n","import invariant from 'invariant';\nimport globalHelper from '../globalHelper';\nimport { generateRandomGlobalActionKey } from '../utils/key';\nimport {\n  GlobalActions,\n  GlobalAction,\n  GlobalDispatch,\n  Collections,\n} from '../types';\n\nconst dispatch = (actions: GlobalActions | GlobalAction) => {\n  const next = ([] as GlobalActions).concat(actions);\n\n  next.forEach(action => {\n    const { namespace: targetNamespace, actions } = action;\n    invariant(targetNamespace, '`namespace` is required for global action');\n    invariant(actions, '`actions` is required for global action');\n    const actionKey = generateRandomGlobalActionKey();\n    globalHelper.addAction(actionKey, targetNamespace, actions);\n  });\n};\n\n// It is not a official documentation compatible Hooks API.\n// For global state, data change responsive is not required, which means\n// value's change will not trigger any UI/data update...\nexport default (): [Collections, GlobalDispatch] => [\n  globalHelper.collections,\n  dispatch,\n];\n","import {\n  Next,\n  Action,\n  ThunkFn,\n  InternalDispatch,\n  ThunkDispatch,\n  BasicModelType,\n  ApplyMiddlewareAPI,\n  ExtractEffectsTypeOnlyModels,\n} from '../types';\n\n/**\n * The basic format of action type is `storeKey/${type}`.\n * Only action in effect could ignore `storeKey`\n */\nexport default <T extends BasicModelType<T>>({\n  getState,\n  dispatch,\n  store,\n}: ApplyMiddlewareAPI<T>) => (next: Next) => (\n  actions: Array<Action> | Function,\n  storeKey: keyof T\n) => {\n  if (typeof actions === 'function') {\n    const nextDispatch = (thunkActions: Array<Action> | Action) => {\n      const nextArgs = ([] as Array<Action>).concat(thunkActions) || [];\n      const actions = nextArgs\n        .map(action => {\n          if (!action) return null;\n          const { type, payload } = action;\n          const parts = [storeKey].concat(type.split('/') as any).slice(-2);\n          const nextAction: Action = {\n            type: parts.join('/'),\n          };\n          if (payload) {\n            nextAction.payload = payload;\n          }\n\n          return nextAction;\n        })\n        .filter(v => !!v) as Array<Action>;\n      if (actions.length) dispatch && (dispatch as InternalDispatch)(actions);\n    };\n    return actions(nextDispatch, getState);\n  }\n\n  const nextActions = ([] as Array<Action>).concat(actions);\n  const reducerActions: Array<Action> = [];\n  const effectActions: Array<Action> = [];\n\n  nextActions\n    .filter(action => {\n      if (Object.prototype.toString.call(action) === '[object Object]') {\n        const { type } = action;\n        return !!type;\n      }\n\n      return false;\n    })\n    .forEach(function(action: Action) {\n      try {\n        const { type } = action;\n        const parts = type.split('/');\n        const storeKey = parts[0] as keyof T;\n        const actionType = parts[1] as keyof ExtractEffectsTypeOnlyModels<\n          T\n        >[typeof storeKey];\n        const currentEffects = store.getEffects()[storeKey];\n\n        if (currentEffects && currentEffects[actionType]) {\n          return effectActions.push(action);\n        }\n\n        // If you dispatch an unregistered model's effect, it will be\n        // considered as an normal reducer action..\n        return reducerActions.push(action);\n      } catch (info) {\n        return false;\n      }\n    });\n\n  if (reducerActions.length) {\n    next(reducerActions);\n  }\n\n  effectActions.forEach(action => {\n    const { type, payload } = action;\n    const parts = type.split('/');\n    const storeKey = parts[0] as keyof T;\n    const actionType = parts[1] as keyof ExtractEffectsTypeOnlyModels<\n      T\n    >[keyof T];\n    const currentEffects = store.getEffects()[storeKey];\n    const handler = (currentEffects[actionType] as unknown) as ThunkFn<T>;\n\n    dispatch && (dispatch as ThunkDispatch<T>)(handler(payload), storeKey);\n  });\n};\n","const padding = (value: number, paddingCount = 2) =>\n  `00${value}`.slice(-paddingCount);\n\nexport const formatTime = (d: number) => {\n  const date = new Date(d);\n  const hh = date.getHours();\n  const mm = date.getMinutes();\n  const ss = date.getSeconds();\n  const ms = date.getMilliseconds();\n\n  return `${padding(hh)}:${padding(mm)}:${padding(ss)}.${padding(ms, 3)}`;\n};\n","import { Action } from '../../types';\n\nimport { formatTime } from './utils';\n\nconst colorLine = Function.apply.bind(console.log, null) // eslint-disable-line\nconst colorGroupEnd = console.groupEnd // eslint-disable-line\nconst colorGroupCollapsed = Function.apply.bind(console.groupCollapsed, null) // eslint-disable-line\n// const isEmptyObject = obj => !obj || Object.keys(obj).length === 0 && obj.constructor === Object\n\nconst colorLog = (group: Array<Array<string>>) => {\n  const { text: t, styles: s } = group.reduce(\n    (acc, cur) => {\n      const { text, styles } = acc;\n      const [subText, subStyle] = cur;\n\n      return {\n        text: `${text}%c ${subText}`,\n        styles: ([] as Array<string>).concat(styles, subStyle),\n      };\n    },\n    {\n      text: '',\n      styles: [] as Array<string>,\n    }\n  );\n\n  return [t, ...s];\n};\n\nconst renderTitle = (props: {\n  initialActions: Array<Action>;\n  startTime: number;\n  endTime: number;\n}) => {\n  const { initialActions, startTime, endTime } = props;\n  let title: string = '';\n\n  const nextActions = ([] as Array<Action>).concat(initialActions).slice(0, 2);\n\n  nextActions.forEach(({ type }) => {\n    title = title ? `${title}__${type}` : type;\n  });\n\n  if (initialActions.length > 2) {\n    title = `${title}...`;\n  }\n\n  let actionColor = 'color: #7cb305; font-weight: bold';\n\n  if (title.startsWith('@init')) {\n    actionColor = 'color: #ff4d4f; font-weight: bold';\n  }\n\n  const parts = [];\n  parts.push(['action', actionColor]);\n  parts.push([title, 'color: inherit;']);\n  parts.push([\n    `@ ${formatTime(startTime)}`,\n    'color: gray; font-weight: lighter;',\n  ]);\n  parts.push([\n    `(${endTime - startTime}ms)`,\n    'color: gray; font-weight: lighter;',\n  ]);\n\n  colorGroupCollapsed(colorLog(parts));\n};\n\nconst renderSubAction = (props: {\n  type: string;\n  payload?: any;\n  actionType?: string;\n  style?: string;\n}) => {\n  const { type, payload = '', actionType = 'action', style } = props;\n  const parts = [];\n\n  if (type) {\n    parts.push([actionType, 'color: #eb2f96; font-weight: bold']);\n    parts.push([type, 'color: #722ed1; font-weight: bold']);\n  }\n\n  if (style === 'line') {\n    colorLine([...colorLog(parts), payload]);\n  } else {\n    colorGroupCollapsed([...colorLog(parts), payload]);\n  }\n};\n\nconst renderState = (state: object, isNextState: boolean = false) => {\n  const parts = [];\n\n  let title = 'currentState';\n  let style = 'color: #4CAF50; font-weight: bold';\n\n  if (isNextState) {\n    title = 'nextState';\n    style = 'color: #4CAF50; font-weight: bold';\n  }\n\n  parts.push([title, style]);\n  colorLine([...colorLog(parts), state]);\n};\n\nconst renderPrevState = (state: object) => {\n  renderState(state);\n};\n\nconst paint = (tree: {\n  type: string;\n  actions?: {\n    [key: string]: any;\n  };\n  effects?: {\n    [key: string]: any;\n  };\n  payload?: any;\n  actionType?: string;\n}) => {\n  const { type, actions = {}, effects = {}, payload, actionType } = tree;\n  const actionKeys = Object.keys(actions);\n  const effectKeys = Object.keys(effects);\n\n  if (!actionKeys.length && !effectKeys.length) {\n    renderSubAction({\n      type,\n      payload,\n      actionType,\n      style: 'line',\n    });\n  } else {\n    renderSubAction({\n      type,\n      payload,\n      actionType,\n    });\n  }\n\n  actionKeys.forEach(key => {\n    const action = actions[key];\n    paint(action);\n  });\n  effectKeys.forEach(key => {\n    const effect = effects[key];\n    paint(effect);\n  });\n\n  if (actionKeys.length || effectKeys.length) {\n    colorGroupEnd();\n  }\n};\n\nconst paintActions = (actions: Array<Action>) => {\n  const nextActions = actions.filter(({ type }) => !type.startsWith('@init'));\n\n  nextActions.forEach(action => paint(action));\n\n  if (nextActions.length) {\n    colorGroupEnd();\n  }\n};\n\nexport default (props: {\n  actions: Array<Action>;\n  prevState: object;\n  initialActions: Array<Action>;\n  startTime: number;\n  endTime: number;\n}) => {\n  const { prevState = {}, actions } = props;\n\n  renderTitle(props);\n  renderPrevState(prevState);\n  paintActions(actions);\n  colorGroupEnd();\n};\n","import print from './print';\nimport { Next, Action, ApplyMiddlewareAPI, BasicModelType } from '../../types';\n\nexport default <T extends BasicModelType<T>>({\n  getState,\n}: ApplyMiddlewareAPI<T>) => (next: Next) => (\n  actions: Array<Action> | Function\n) => {\n  if (typeof actions !== 'function') {\n    const startTime = Date.now();\n    const prevState = JSON.parse(JSON.stringify(getState()));\n\n    next(actions);\n\n    const endTime = Date.now();\n\n    print({\n      actions,\n      prevState,\n      initialActions: actions,\n      startTime,\n      endTime,\n    });\n  }\n};\n\n// 结束的时间点。。。\n// 如果同步的reducers的话，最外层运行结束就是一个结点\n// 如果说是一个effect的话，这个时候会有很多的不确定性。或者同样是以外层结束作为一个结点；\n// 然后每一次有sub结束完就搞一次；最终的结论就是一个action可能会有多个的log\n","import { IPatcher } from './types';\n\nclass Patcher implements IPatcher {\n  public autoRunFn: Function;\n  public paths: Array<Array<string>>;\n  public removers: Array<Function>;\n  public dirty: boolean;\n  public id: string;\n  public displayName: string;\n  public parent: null | Patcher;\n  public children: Array<any>;\n\n  constructor({\n    paths,\n    autoRunFn,\n    key,\n    parent,\n    displayName,\n  }: {\n    paths: Array<Array<string>>;\n    autoRunFn: Function;\n    key: string;\n    parent: null | Patcher;\n    displayName: string;\n  }) {\n    this.autoRunFn = autoRunFn;\n    this.paths = paths;\n\n    this.removers = [];\n    this.dirty = false;\n    this.id = key;\n    this.displayName = displayName;\n    this.parent = parent;\n    this.children = [];\n\n    if (this.parent) {\n      this.parent.children.push(this);\n    }\n  }\n\n  destroyPatcher() {\n    this.teardown();\n    if (this.children.length) {\n      this.children.forEach(child => child.destroyPatcher());\n    }\n\n    if (this.parent) {\n      this.parent.removeChild(this);\n    }\n    this.parent = null;\n  }\n\n  appendTo(parent: null | Patcher) {\n    if (this.parent) {\n      this.parent.removeChild(this);\n    }\n\n    if (parent) {\n      this.parent = parent;\n\n      if (parent.children.indexOf(this) === -1) {\n        parent.children.push(this);\n      }\n    }\n  }\n\n  belongs(parent: null | Patcher): boolean {\n    if (!parent) return false;\n\n    if (this.parent) {\n      if (this.parent === parent) {\n        return true;\n      }\n      return this.parent.belongs(parent);\n    }\n\n    return false;\n  }\n\n  removeChild(child: Patcher) {\n    const index = this.children.indexOf(child);\n    if (index !== -1) this.children.splice(index, 1);\n  }\n\n  update({ paths }: { paths: Array<Array<string>> }) {\n    this.paths = paths;\n    this.dirty = false;\n    this.teardown();\n  }\n\n  addRemover(remover: Function) {\n    this.removers.push(remover);\n  }\n\n  // 将patcher从PathNode上删除\n  teardown() {\n    this.removers.forEach(remover => remover());\n    this.removers = [];\n  }\n\n  markDirty() {\n    this.teardown();\n  }\n\n  markDirtyAll() {\n    this.teardown();\n\n    // If parent is dirty, then its children should be all dirty...\n    if (this.children.length) {\n      this.children.forEach(child => child.markDirtyAll());\n    }\n  }\n\n  triggerAutoRun() {\n    if (typeof this.autoRunFn === 'function') this.autoRunFn();\n  }\n}\n\nexport default Patcher;\n","import React, {\n  useContext,\n  useState,\n  useRef,\n  useEffect,\n  useCallback,\n  FC,\n} from 'react';\nimport context from './context';\nimport { generatePatcherKey } from './utils/key';\nimport Patcher from './Patcher';\n\nlet count = 0;\n\nconst Helper = ({ addListener }: { addListener: Function }) => {\n  addListener();\n  return null;\n};\n\nexport default (WrappedComponent: FC<any>) => {\n  function NextComponent(props: any) {\n    const shadowState = useRef(0);\n    // @ts-ignore\n    const [_, setState] = useState(0); // eslint-disable-line\n    const patcherUpdated = useRef(0);\n    const isMounted = useRef(false);\n\n    useEffect(() => {\n      isMounted.current = true;\n    });\n\n    const {\n      application,\n      useProxy,\n      useScope,\n      namespace,\n      patcher: parentPatcher,\n      useRelinkMode,\n      ...rest\n    } = useContext(context);\n\n    const incrementCount = useRef(count++)  // eslint-disable-line\n    const componentName = `${NextComponent.displayName}-${incrementCount.current}`;\n    const patcher = useRef<undefined | Patcher>();\n\n    shadowState.current += 1;\n\n    const autoRunFn = () => {\n      if (isMounted.current) setState(state => state + 1);\n    };\n\n    if (!patcher.current) {\n      patcher.current = new Patcher({\n        paths: [],\n        autoRunFn,\n        parent: parentPatcher,\n        key: generatePatcherKey({\n          namespace: namespace as string,\n          componentName,\n        }),\n        displayName: NextComponent.displayName,\n      });\n    }\n\n    application?.proxyState.enter(componentName);\n\n    useEffect(\n      () => () => {\n        if (patcher.current) patcher.current.destroyPatcher();\n      },\n      [] // eslint-disable-line\n    );\n\n    const addListener = useCallback(() => {\n      patcher.current?.appendTo(parentPatcher); // maybe not needs\n\n      // @ts-ignore\n      const paths = application?.proxyState\n        .getContext()\n        .getCurrent()\n        .getRemarkable();\n\n      patcher.current?.update({ paths: paths! });\n      if (patcher.current) application?.addPatcher(patcher.current);\n      patcherUpdated.current += 1;\n      application?.proxyState.leave();\n    }, []); // eslint-disable-line\n\n    const contextValue = {\n      ...rest,\n      application,\n      useProxy,\n      useScope,\n      namespace,\n      useRelinkMode,\n      patcher: patcher.current,\n      componentName: componentName,\n    };\n\n    return (\n      <context.Provider value={contextValue}>\n        <React.Fragment>\n          <WrappedComponent {...props} />\n          <Helper addListener={addListener} />\n        </React.Fragment>\n      </context.Provider>\n    );\n  }\n\n  NextComponent.displayName =\n    WrappedComponent.displayName ||\n    WrappedComponent.name ||\n    'ObservedComponent';\n\n  return React.memo(props => <NextComponent {...props} />);\n};\n"],"names":["calculateChangeBits","noop","defaultValue","computation","dispatch","attachStoreName","useProxy","namespace","patcher","trackerNode","useRelinkMode","application","createContext","infoLog","args","console","log","DEBUG","Field","PathNode","constructor","prop","parent","children","patchers","autoRunners","addPatcher","path","addPathNode","Patchers","destroyPatcher","addAutoRunner","autoRunner","AutoRunners","destroyAutoRunner","getCollection","field","handler","len","length","reduce","node","cur","index","childNode","collection","push","addRemover","indexOf","id","splice","err","destroyPathNode","forEach","childKeys","Object","keys","key","pathNode","toString","Function","call","bind","prototype","isObject","obj","isArray","isNumber","isString","isBoolean","isMutable","isPrimitive","isTypeEqual","o1","o2","hasOwnProperty","is","x","y","shallowEqual","objA","objB","keysA","keysB","i","Application","base","strictMode","autoRunnerNode","pendingPatchers","pendingAutoRunners","pendingCleaner","proxyState","produce","processAutoRunner","values","value","treeShakeAutoRunner","update","treeShake","updateBase","triggerAutoRun","clean","updateDryRun","actions","concat","storeKey","changedValue","origin","relink","addPatchers","markDirty","addAutoRunners","isDirty","markClean","compare","branch","baseValue","nextValue","cb","keysToCompare","oldValue","newValue","childBranch","paths","fullPath","getStoreData","storeName","storeValue","seenKeys","MULTIPLIER","Math","pow","generateNamespaceKey","undefined","isNaN","floor","random","patcherSeenKeys","generatePatcherKey","componentName","count","next","generateRandomGlobalActionKey","Provider","store","useScope","namespaceRef","useRef","current","getState","bindApplication","contextValue","React","context","compose","funcs","arg","a","b","applyMiddleware","middleware","nextMiddleware","createStore","config","initialState","api","rest","chain","map","decorateDispatch","AutoRunner","autoRunFn","_isDirty","removers","remover","teardown","autoRun","fn","invariant","state","enter","tracker","getContext","getCurrent","getRemarkable","leave","Store","configs","models","initialValue","_state","_reducers","_effects","_pendingActions","_pendingAutoRunInitializations","injectModel","_application","subscriptions","_count","getReducers","getEffects","resolveActions","changedValueGroup","action","type","payload","actionType","split","usedReducer","currentState","warn","setValue","nextActions","changedValues","derivedActions","derivedChangedValue","storeSubscriptionsKeys","storeSubscriptionsKeysLength","toObject","acc","oldState","newState","subscription","diff","runPendingAutoRunInitialization","initialization","chainedMiddleware","generateSubscriptionKey","subscribe","model","reducers","effects","nextPendingActions","filter","reducer","effect","nextState","subscriptionsKeys","autoRunKey","modelKey","enhancer","useContext","peek","getTracker","setContext","GlobalHelper","collections","addAction","actionKey","findIndex","targetNamespace","globalHelper","nextDispatch","thunkActions","nextArgs","parts","slice","nextAction","join","v","reducerActions","effectActions","currentEffects","info","padding","paddingCount","formatTime","d","date","Date","hh","getHours","mm","getMinutes","ss","getSeconds","ms","getMilliseconds","colorLine","apply","colorGroupEnd","groupEnd","colorGroupCollapsed","groupCollapsed","colorLog","group","text","t","styles","s","subText","subStyle","renderTitle","props","initialActions","startTime","endTime","title","actionColor","startsWith","renderSubAction","style","renderState","isNextState","renderPrevState","paint","tree","actionKeys","effectKeys","paintActions","prevState","now","JSON","parse","stringify","print","Patcher","displayName","dirty","child","removeChild","appendTo","belongs","markDirtyAll","Helper","addListener","WrappedComponent","NextComponent","shadowState","_","setState","useState","patcherUpdated","isMounted","useEffect","parentPatcher","incrementCount","useCallback","Fragment","name","memo"],"mappings":"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"}